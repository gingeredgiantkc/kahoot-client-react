{"version":3,"sources":["components/Host/theme.mp3","components/Global/Header.js","components/Player/JoinGame.js","components/CreateQuiz/QuizDetailsForm.js","components/CreateQuiz/QuestionsForm.js","components/CreateQuiz/Confirm.js","components/CreateQuiz/QuizForm.js","components/utils.js","components/Quiz/Quiz.js","components/Host/Lobby.js","components/Host/Start.js","components/Host/QuestionBlockIntro.js","components/Host/QuestionBlock.js","components/Host/ResultBlock.js","components/Host/Scoreboard.js","components/Host/Gameover.js","components/Host/Gameblock.js","components/Player/Preview.js","components/Player/Answer.js","components/Player/Result.js","components/Player/Ranking.js","components/Player/Playblock.js","components/Player/Instructions.js","components/Player/GetReady.js","components/App.js","serviceWorker.js","index.js","components/Events.js"],"names":["module","exports","socket","Header","console","log","state","endpoint","io","Component","darkGreyTheme","createMuiTheme","palette","primary","main","grey","JoinGame","handleChange","event","target","name","value","setState","handleClick","disabled","handleSubmit","preventDefault","nickname","pin","emit","PLAYER_JOINED","on","GAME_NOT_FOUND","message","setTimeout","PLAYER_JOINED_SUCCESSFULLY","data","props","history","push","error","this","className","Grid","container","spacing","direction","alignItems","justify","style","minHeight","item","lg","md","xs","onSubmit","TextField","inputProps","textAlign","fontWeight","color","placeholder","onChange","margin","variant","required","fullWidth","theme","Button","type","to","textDecoration","QuizDetailsForm","continue","nextStep","values","sm","label","category","onClick","QuestionsForm","back","prevStep","saveQuestion","questions","Questions","length","quizQuestions","map","q","i","key","question","answers","correct","QuestionForm","handleAnswerChange","prevState","a","b","c","d","FormControl","width","InputLabel","Select","MenuItem","Confirm","saveQuiz","QuizDetails","QuestionList","URL","model","QuizForm","step","async","postRequest","axios","post","res","quizId","_id","content","QuizInfo","getQuiz","id","get","Quiz","match","params","then","Container","maxWidth","PreviewQuestions","Lobby","musicOff","muted","musicOn","startGame","HOST_STARTED_GAME","players","playersCount","require","parse","location","search","HOST_JOINED","SHOW_PIN","UPDATE_PLAYERS_IN_LOBBY","playersData","off","button","href","ref","src","autoPlay","marginTop","paddingLeft","paddingRight","Players","playerNames","p","Start","quizName","numberOfQuestions","parsed","parseInt","FETCH_INTRO","GAME_INTRO","QuestionBlockIntro","clearTimeout","questionNumber","totalNumberOfQuestions","QuestionBlock","timer","time","clearInterval","intervalId","QUESTION_END","playersAnswered","setInterval","UPDATE_PLAYERS_ANSWERED","FETCH_TIME","playerId","TIME","backgroundColor","border","padding","fontSize","ResultBlock","onNext","fetchScoreboard","FETCH_NEXT_QUESTION","answeredA","answeredB","answeredC","answeredD","Scoreboard","finishGame","endGame","nextQuestion","rankedPlayers","gameStatus","playerRanks","Rankings","playerRankings","r","rank","score","FinalRankings","rankings","Gameover","finalRankings","Gameblock","NEXT","FINISH_GAME","FETCH_SCOREBOARD","questionStatus","FETCH_QUESTION","RECEIVE_QUESTION","questioNumber","QUESTION_RESULT","correctAnswer","RECEIVE_SCOREBOARD","NEXT_QUESTION","numberOfPlayers","GAME_OVER","Preview","Answer","currentTarget","submitAnswer","buttonsOn","answer","Results","showResult","lastCorrect","showStreak","streak","showRank","Rank","finalRank","Ranking","letter","ANSWER_SUBMITTED","totalCorrect","FETCH_NUMBER_OF_QUESTIONS","RECEIVE_NUMBER_OF_QUESTIONS","count","RECEIVE_ANSWER_OPTIONS","ANSWER_RESULT","result","info","FETCH_SCORE","PLAYER_RESULTS","RECEIVE_NEXT_ANSWER_OPTIONS","GO_TO_NEXT","PLAYER_RANK","FINAL_RANK","FINAL","Instructions","GAME_HAS_STARTED","GetReady","App","exact","path","component","Playblock","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","WAITING_FOR_START","READY"],"mappings":"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","file":"static/js/main.6e3929ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/theme.bcd504e3.mp3\";","import React, { Component } from 'react';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport io from 'socket.io-client';\n\nvar socket;\n\nclass Header extends Component {\n  constructor() {\n    console.log('<header />')\n    super();\n    this.state = {\n      endpoint: 'https://quizy-server.herokuapp.com/'\n      // endpoint: 'http://localhost:3000'\n    };\n  socket = io(this.state.endpoint);\n  }\n\n  render() {\n    return(\n      <></>\n    )\n  }\n}\n\nexport { Header, socket };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './JoinGame.css';\nimport { MuiThemeProvider, createMuiTheme, withStyles  } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { socket } from '../Global/Header';\nimport { PLAYER_JOINED, GAME_NOT_FOUND, PLAYER_JOINED_SUCCESSFULLY } from '../Events';\n\nconst darkGreyTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[900]\n    }\n  }\n})\n\nexport default class JoinGame extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nickname: null,\n      pin: null,\n      message: null,\n      disabled: false\n    };\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleClick = event => {\n    this.setState({\n      disabled: true\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { nickname, pin } = this.state;\n    socket.emit(PLAYER_JOINED, {\n      nickname: nickname,\n      pin: pin\n    });\n\n    socket.on(GAME_NOT_FOUND, () => {\n      console.log('Game not found...');\n      this.setState({\n        message: 'Game not found.'\n      })\n\n      setTimeout(() => this.setState({\n        message: null\n      }), 2000);\n\n    });\n\n    socket.on(PLAYER_JOINED_SUCCESSFULLY, data => {\n      this.props.history.push(`/instructions?nickname=${ this.state.nickname }&pin=${ this.state.pin }`)\n    })\n  }\n\n  render() {\n    let error;\n    if (this.state.message === null) {\n      error = <div></div>\n    } else {\n      error = <div>We didn't recognise the game pin. Please check and try again.</div>\n    }\n    return (\n      <div className=\"home\">\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: '100vh' }}\n        >\n          <Grid item lg={2} md={3} xs={5}>\n            <h1 className=\"main-title\">QUIZY</h1>\n          </Grid>\n          <Grid item lg={2} md={3} xs={5}>\n            <form onSubmit={ this.handleSubmit }>\n              <TextField\n                inputProps={{\n                  style: {\n                    textAlign: \"center\",\n                    fontWeight: \"bold\",\n                    color: \"black\"\n                  }\n                }}\n                placeholder=\"NICKNAME\"\n                name=\"nickname\"\n                value={ this.state.nickname || '' }\n                onChange={ this.handleChange }\n                margin=\"dense\"\n                variant=\"outlined\"\n                required fullWidth\n              />\n              <TextField\n                inputProps={{\n                  style: {\n                    textAlign: \"center\",\n                    fontWeight: \"bold\",\n                    color: \"black\"\n                  }\n                }}\n                placeholder=\"GAME PIN\"\n                name=\"pin\"\n                value={ this.state.pin || '' }\n                onChange={ this.handleChange }\n                margin=\"dense\"\n                variant=\"outlined\"\n                required fullWidth\n              />\n              <MuiThemeProvider theme={ darkGreyTheme }>\n                <Button\n                  style={{\n                    fontWeight: \"bold\"\n                  }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  disabled={ this.state.disabled }\n                \n                  fullWidth\n                >\n                  Enter\n                </Button>\n              </MuiThemeProvider>\n            </form>\n          </Grid>\n          <Grid item lg={2} md={3} xs={5}>\n            { error }\n          </Grid>\n          <Grid item lg={2} md={3} xs={5}>\n            <p style={{ color: \"white\" }}>Create your own quiz <Link to=\"/quizzes/new\" style={{ color: \"white\", textDecoration: \"none\", fontWeight: \"bold\" }}>here</Link>.</p>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class QuizDetailsForm extends Component {\n  continue = event => {\n    event.preventDefault();\n    this.props.nextStep();\n  }\n\n  render() {\n    const { values, handleChange } = this.props;\n    return (\n      <>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <Grid item md={4} sm={12}>\n            <Grid\n              container\n              spacing={2}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ minHeight: '25vh' }}\n            >\n              <Grid item xs={12} style={{ textAlign: \"center\"}}>\n                <h1>Enter quiz details:</h1>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Name\"\n                  name=\"name\"\n                  onChange={ handleChange }\n                  value={ values.name }\n                  margin=\"dense\"\n                  variant=\"filled\"\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Category\"\n                  name=\"category\"\n                  onChange={ handleChange }\n                  value={ values.category }\n                  margin=\"dense\"\n                  variant=\"filled\"\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button variant=\"contained\" color=\"primary\" onClick={ this.continue }>\n                  Continue\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nexport default class QuestionsForm extends Component {\n  continue = event => {\n    event.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = event => {\n    event.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, saveQuestion } = this.props;\n    return (\n      <>\n        <Grid\n          container\n          spacing={2}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: '25vh' }}\n        >\n          <Grid item md={4} sm={12}>\n            <h1>Add Questions:</h1>\n          </Grid>\n          <Grid item md={4} sm={12}>\n            <QuestionForm\n              saveQuestion={ saveQuestion }\n            />\n          </Grid>\n          <Grid item md={4} sm={12}>\n            <Grid\n              container\n              spacing={2}\n            >\n              <Grid item md={6} xs={12}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={ this.back } fullWidth>\n                  Back\n                </Button>\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <Button variant=\"contained\" color=\"primary\" onClick={ this.continue } fullWidth>\n                  Continue\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item md={4} sm={12}>\n            <Grid\n              container\n              alignItems=\"flex-start\"\n              justify=\"center\"\n            >\n              <Questions questions={ values.questions }/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nconst Questions = (props) => {\n  if (props.questions.length === 0) {\n    return (<div>No questions have been added.</div>)\n  }\n\n  const quizQuestions = props.questions.map((q, i) => (\n    <div key={ i }>\n      <div style={{ fontWeight: \"bold\" }}>Question { i + 1 }</div>\n      <p>{ q.question } Answer: { q.answers[q.correct] }</p>\n    </div>\n  ))\n\n  return (\n    <div>\n      <h1>Current Questions:</h1>\n      { quizQuestions }\n    </div>\n  )\n}\n\nclass QuestionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      question: '',\n      answers: {\n        a: '',\n        b: '',\n        c: '',\n        d: ''\n      },\n      correct: ''\n    };\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleAnswerChange = event => {\n    const { name, value } = event.target;\n    this.setState(prevState => ({\n      answers: {\n        ...prevState.answers,\n        [name]: value\n      }\n    }))\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.saveQuestion(this.state);\n    this.setState({\n      question: '',\n      answers: {\n        a: '',\n        b: '',\n        c: '',\n        d: ''\n      },\n      correct: ''\n    });\n  };\n\n  render() {\n    return (\n      <form variant=\"outlined\" onSubmit={ this.handleSubmit } >\n        <Grid\n          container\n          direction=\"row\"\n          spacing={1}\n        >\n          <Grid item xs={12}>\n            <TextField label=\"Question\" name='question' value={ this.state.question } onChange={ this.handleChange }  margin=\"dense\" variant=\"filled\" fullWidth/>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField label=\"Answer A:\" name='a' value={ this.state.answers.a } onChange={ this.handleAnswerChange } margin=\"dense\" variant=\"filled\" fullWidth required/>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField label=\"Answer B:\" name='b' value={ this.state.answers.b } onChange={ this.handleAnswerChange } margin=\"dense\" variant=\"filled\" fullWidth required/>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField label=\"Answer C:\" name='c' value={ this.state.answers.c } onChange={ this.handleAnswerChange } margin=\"dense\" variant=\"filled\" fullWidth required/>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField label=\"Answer D:\" name='d' value={ this.state.answers.d } onChange={ this.handleAnswerChange } margin=\"dense\" variant=\"filled\" fullWidth required/>\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl margin=\"dense\" variant=\"filled\" style={{ width: '100%' }}>\n              <InputLabel>Correct Answer:</InputLabel>\n              <Select\n                name=\"correct\"\n                value={ this.state.correct } onChange={ this.handleChange }\n              >\n                <MenuItem value=\"a\">A</MenuItem>\n                <MenuItem value=\"b\">B</MenuItem>\n                <MenuItem value=\"c\">C</MenuItem>\n                <MenuItem value=\"d\">D</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\n              Add Question\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button  from '@material-ui/core/Button';\n\nexport default class Confirm extends Component {\n  continue = event => {\n    event.preventDefault();\n    this.props.saveQuiz();\n  };\n\n  back = event => {\n    event.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values: { name, category, questions} } = this.props;\n    return (\n      <>\n        <Grid\n          container\n          direction=\"column\"\n          spacing={2}\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <Grid item md={4} sm={12}>\n            <h1>Confirm details:</h1>\n          </Grid>\n          <Grid item md={4} sm={12}>\n            <Grid\n              container\n              alignItems=\"flex-start\"\n            >\n              <Grid item xs={12}>\n                <QuizDetails name={ name } category={ category } />\n                <QuestionList questions={ questions } />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item md={4} sm={12}>\n            <Grid\n              container\n              spacing={2}\n            >\n              <Grid item md={6} xs={12}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={ this.back } fullWidth>\n                  Back\n                </Button>\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <Button variant=\"contained\" color=\"primary\" onClick={ this.continue } fullWidth>\n                  Confirm\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nconst QuizDetails = (props) => {\n  return (\n    <div>\n      <p><span style={{ fontWeight: \"bold\" }}>Name: </span>{ props.name }</p>\n      <p><span style={{ fontWeight: \"bold\" }}>Category: </span>{ props.category }</p>\n    </div>\n  )\n}\n\nconst QuestionList = (props) => {\n  const quizQuestions = props.questions.map((q,i) => (\n    <div key={ i }>\n      <div style={{ fontWeight: \"bold\" }}>Question { i + 1 }</div>\n      <p>{ q.question } Answer: { q.answers[q.correct] }</p>\n    </div>\n  ))\n\n  return (\n    <div>\n      { quizQuestions }\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport QuizDetailsForm from './QuizDetailsForm';\nimport QuestionsForm from './QuestionsForm';\nimport Confirm from './Confirm';\n\nlet URL = (model) => {\n  return `https://quizy-server.herokuapp.com/${ model }/`\n};\n\nexport default class QuizForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      step: 1,\n      name: '',\n      category: '',\n      questions: []\n    };\n  }\n\n  // Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  }\n\n  // Go back to previous step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1\n    });\n  }\n\n  saveQuiz = async () => {\n    const { name, category, questions } = this.state;\n    const postRequest = {\n      name: name,\n      category: category,\n      questions: questions\n    }\n    console.log(postRequest);\n    let res = await axios.post(URL('quizzes'), postRequest);\n    const quizId = res.data._id;\n    console.log(quizId);\n    this.props.history.push(`/quizzes/${ quizId }`);\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  saveQuestion = content => {\n    this.setState({\n      questions: [...this.state.questions, content]\n    });\n  };\n\n  render() {\n    const { step } = this.state;\n    const { name, category, questions } = this.state;\n    const values = { name, category, questions };\n\n    switch(step) {\n      case 1:\n        return (\n          <QuizDetailsForm\n            nextStep={ this.nextStep }\n            handleChange={ this.handleChange }\n            values={ values }\n          />\n        )\n      case 2:\n        return (\n          <QuestionsForm\n            nextStep={ this.nextStep }\n            prevStep={ this.prevStep }\n            saveQuestion={ this.saveQuestion }\n            values={ values }\n          />\n        )\n      case 3:\n        return (\n          <Confirm\n            nextStep={ this.nextStep }\n            prevStep={ this.prevStep }\n            saveQuiz={ this.saveQuiz }\n            values={ values }\n          />\n        );\n      default:\n        return (\n          <QuizDetailsForm\n            nextStep={ this.nextStep }\n            handleChange={ this.handleChange }\n            values={ values }\n          />\n        )\n    }\n  }\n}\n","import axios from 'axios';\n\nconst QuizInfo = {\n  getQuiz(id) {\n    return axios.get(`http://localhost:3000/quizzes/${ id }`)\n  }\n}\n\nexport default QuizInfo;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport QuizInfo from '../utils';\nimport { Container } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nexport default class Quiz extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      category: '',\n      questions: []\n    }\n  }\n\n  componentDidMount() {\n    console.log( this.props.match.params );\n    const { quizId } = this.props.match.params;\n    console.log( quizId );\n    QuizInfo.getQuiz( quizId ).then(( { data } ) => {\n      const { _id, name, category, questions } = data;\n      console.log(name, category, questions);\n      this.setState({\n        id: _id,\n        name: name,\n        category: category,\n        questions: questions\n      })\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Container maxWidth=\"md\">\n          <h1>Quiz preview</h1>\n          <h2>Quiz: { this.state.name }</h2>\n          <h2>Category: { this.state.category }</h2>\n          <PreviewQuestions questions={ this.state.questions } />\n          <Link to={`/lobby?quizId=${ this.state.id }`}>\n            <Button variant=\"contained\" color=\"primary\">\n              Host Game\n            </Button>\n          </Link>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst PreviewQuestions = (props) => {\n  if (props.questions.length === 0) {\n    return (<div>Questions are loading.</div>)\n  }\n\n  const questions = props.questions.map((q, i) => (\n    <div key={ i }>\n      <div style={{ fontWeight: \"bold\" }}>Question { i + 1 }</div>\n      <p>{ q.question }</p>\n    </div>\n  ))\n\n  return (\n    <div>\n      { questions }\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport './Lobby.css';\nimport { Link } from 'react-router-dom';\nimport Pin from '../Global/Pin';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { socket } from '../Global/Header';\nimport { HOST_JOINED, SHOW_PIN, UPDATE_PLAYERS_IN_LOBBY, HOST_STARTED_GAME } from '../Events';\nimport theme from './theme.mp3';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\n\nexport default class Lobby extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quizId: '',\n      pin: null,\n      players: [],\n      playersCount: 0,\n      disabled: true,\n      muted: false\n    };\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const quizId = parsed.quizId;\n    console.log( quizId );\n    this.setState({\n      quizId: quizId\n    })\n\n    socket.emit(HOST_JOINED, quizId);\n\n    socket.on(SHOW_PIN, data => {\n      this.setState({\n        pin: data.pin\n      })\n    })\n\n    socket.on(UPDATE_PLAYERS_IN_LOBBY, playersData => {\n      console.log(playersData);\n      if (playersData.playersCount === 0) {\n        this.setState({\n          players: [],\n          playersCount: 0\n        })\n      } else {\n        this.setState({\n          players: playersData.players,\n          playersCount: playersData.playersCount,\n          disabled: false\n        })\n      }\n    })\n  }\n\n  musicOff = event => {\n    event.preventDefault();\n    this.setState({\n      muted: true\n    })\n  }\n\n  musicOn = event => {\n    event.preventDefault();\n    this.setState({\n      muted: false\n    })\n  }\n\n  startGame = () => {\n    console.log('Starting game.');\n    socket.emit(HOST_STARTED_GAME, this.state.pin);\n  }\n\n  componentWillUnmount() {\n    socket.off(SHOW_PIN);\n    socket.off(UPDATE_PLAYERS_IN_LOBBY);\n  }\n\n  render() {\n    let name;\n    if (this.state.playersCount === 1) {\n      name = <span>player</span>\n    } else {\n      name = <span>players</span>\n    }\n\n    let button;\n    if (!this.state.muted) {\n      button = <a onClick={ this.musicOff } href=\"#\"><VolumeOffIcon style={{ color: \"rgba(255, 255, 255, 1)\" }}/></a>\n    } else {\n      button = <a onClick={ this.musicOn }><VolumeUpIcon style={{ color: \"rgba(255, 255, 255, 1)\" }}/></a>\n    }\n\n    console.log(this.state);\n    return (\n      <div className=\"main\">\n        <div className=\"music\">\n          { button }\n        </div>\n        <div>\n          <audio ref=\"audio_tag\" src={ theme } autoPlay muted={ this.state.muted }/>\n        </div>\n        <Grid\n          container\n          direction=\"column\"\n        >\n          <Grid\n            item\n            xs={12}\n            style={{ minHeight: \"20vh\" }}\n          >\n            <div className=\"title\">\n              <h1 className=\"join\">Join with Game PIN: </h1>\n              <h1 className=\"pin\">{ this.state.pin }</h1>\n            </div>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            style={{ marginTop: \"30px\" }}\n          >\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              style={{ minHeight: \"10vh\" }}\n            >\n              <Grid\n                item\n                xs={4}\n                style={{ paddingLeft: \"50px\" }}\n              >\n                <div className=\"players-count\">\n                  { this.state.playersCount } { name }\n                </div>\n              </Grid>\n              <Grid\n                item\n                xs={4}\n                style={{ textAlign: \"center\" }}\n              >\n                <h1 className=\"logo\">QUIZY</h1>\n              </Grid>\n              <Grid\n                item\n                xs={4}\n                style={{ textAlign: \"right\", paddingRight: \"50px\" }}\n              >\n                <Link to={`/start?quizId=${ this.state.quizId }&pin=${ this.state.pin }`}>\n                  <Button variant=\"contained\" color=\"primary\" className=\"start-btn\" onClick={ this.startGame } disabled={ this.state.disabled }>\n                    Start\n                  </Button>\n                </Link>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <Players players={ this.state.players } playersCount={ this.state.playersCount }/>\n          </Grid>\n          <Grid>\n\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst Players = (props) => {\n  console.log(props);\n  if (props.playersCount === 0) {\n    return null\n  }\n\n  const playerNames = props.players.map((p) => (\n    <li key={ p._id }>\n      <p>{ p.nickname }</p>\n    </li>\n  ))\n\n\n  return (\n    <ul className=\"names\">\n      { playerNames }\n    </ul>\n  )\n}\n","import React, { Component } from 'react';\nimport './Start.css';\nimport { socket } from '../Global/Header';\nimport { GAME_INTRO, FETCH_INTRO } from '../Events';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class Start extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pin: 0,\n      quizId: '',\n      quizName: null,\n      numberOfQuestions: 0,\n    };\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const quizId = parsed.quizId;\n    const pin = parseInt(parsed.pin);\n    console.log( pin );\n    this.setState({\n      pin: pin,\n      quizId: quizId\n    })\n\n    socket.emit(FETCH_INTRO, pin);\n\n    socket.on(GAME_INTRO, data => {\n      console.log( data );\n      const { quizName, numberOfQuestions } = data;\n      this.setState({\n        quizName: quizName,\n        numberOfQuestions: numberOfQuestions\n      })\n\n      setTimeout(() => {\n        this.props.history.push(`/gameblock?quizId=${ this.state.quizId }&pin=${ this.state.pin }`);\n      }, 5000);\n\n    });\n\n  }\n\n  render() {\n    return(\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"15vh\" }}\n          className=\"title\"\n        >\n          <h1>{ this.state.quizName }</h1>\n        </Grid>\n        <Grid\n          item\n          container\n          direction=\"column\"\n          xs={12}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"75vh\" }}\n          className=\"middle\"\n        >\n          <div className=\"questions\">{ this.state.numberOfQuestions} Questions</div>\n          <div>Are you ready?</div>\n        </Grid>\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"10vh\" }}\n          className=\"footer\"\n        >\n          <div>Game PIN: <span style={{ fontWeight: \"800\" }}>{ this.state.pin }</span></div>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './QuestionBlockIntro.css';\nimport { socket } from '../Global/Header';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class QuestionBlockIntro extends Component {\n\n  componentDidMount() {\n    this.id = setTimeout(() => this.props.nextStep(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.id);\n  }\n\n  render() {\n    const { questionNumber, question, totalNumberOfQuestions } = this.props\n    return (\n      <Grid\n        container\n        xs={12}\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: \"100vh\" }}\n        className=\"question-block\"\n      >\n        <div className=\"question-tracker\">\n          { questionNumber } of { totalNumberOfQuestions }\n        </div>\n        <Grid\n          item\n          container\n          xs={10}\n          alignItems=\"center\"\n          justify=\"center\"\n          className=\"main-question\"\n        >\n          { question }\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './QuestionBlock.css';\nimport { socket } from '../Global/Header';\nimport { QUESTION_END, FETCH_TIME, TIME, UPDATE_PLAYERS_ANSWERED } from '../Events';\nimport Grid from '@material-ui/core/Grid';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport GradeIcon from '@material-ui/icons/Grade';\nimport FiberManualRecordRoundedIcon from '@material-ui/icons/FiberManualRecordRounded';\nimport Brightness3SharpIcon from '@material-ui/icons/Brightness3Sharp';\n\nexport default class QuestionBlock extends Component {\n  constructor() {\n    super();\n    this.state = {\n      time: 20,\n      playersAnswered: 0,\n      intervalId: ''\n    }\n  }\n\n  timer = () => {\n    this.setState({\n      time: this.state.time - 1\n    })\n\n    if (this.state.time <= 0 ) {\n      clearInterval(this.state.intervalId);\n      const pin = this.props.pin;\n      socket.emit(QUESTION_END, pin);\n      this.props.nextStep();\n    }\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(this.timer, 1000);\n    this.setState({\n      intervalId: intervalId\n    })\n\n    socket.on(UPDATE_PLAYERS_ANSWERED, playersAnswered => {\n      this.setState({\n        playersAnswered: playersAnswered\n      })\n    })\n\n    socket.on(FETCH_TIME, playerId => {\n\n      const data = {\n        pin: this.props.pin,\n        playerId: playerId,\n        time: this.state.time\n      }\n\n      socket.emit(TIME, data);\n    })\n  }\n\n  componentWillUnmount() {\n    // WORKS MORE EFFICIENTLY WITHOUT THESE? CHECK AGAIN.\n    // socket.off(UPDATE_PLAYERS_ANSWERED);\n    // socket.off(FETCH_TIME);\n    clearInterval(this.state.intervalId);\n  }\n\n  render() {\n    let name;\n    if (this.state.playersAnswered === 1) {\n      name = <span>answer</span>\n    } else {\n      name = <span>answers</span>\n    }\n\n    const { pin, question, answers } = this.props;\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"20vh\" }}\n          className=\"top-question\"\n        >\n          <h1>{ question }</h1>\n        </Grid>\n        <Grid\n          item\n          container\n          justify=\"space-between\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"40vh\" }}\n          className=\"controls\"\n        >\n          <div className=\"time\">{ this.state.time }</div>\n          <div className=\"answer-count\">{ this.state.playersAnswered }{ name }</div>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"30vh\" }}\n          className=\"host-answers\"\n        >\n          <Grid\n            item\n            container\n            alignItems=\"center\"\n            xs={6}\n            style={{ backgroundColor: \"rgba(244, 67, 54, 1)\", minHeight: \"15vh\", border: \"1px solid white\", padding: \"5px\" }}\n          >\n            <FavoriteIcon style={{ color: \"white\", fontSize: 40 }} />{ answers.a }\n          </Grid>\n          <Grid\n            item\n            container\n            alignItems=\"center\"\n            xs={6}\n            style={{ backgroundColor: \"rgba(63, 81, 181, 1)\", minHeight: \"15vh\", border: \"1px solid white\", padding: \"5px\" }}\n          >\n            <GradeIcon style={{ color: \"white\", fontSize: 40 }} />{ answers.b }\n          </Grid>\n          <Grid\n            item\n            container\n            alignItems=\"center\"\n            xs={6}\n            style={{ backgroundColor: \"rgba(255, 152, 0, 1)\", minHeight: \"15vh\", border: \"1px solid white\", padding: \"5px\" }}\n          >\n            <FiberManualRecordRoundedIcon style={{ color: \"white\", fontSize: 40 }} />{ answers.c }\n          </Grid>\n          <Grid\n            item\n            container\n            alignItems=\"center\"\n            xs={6}\n            style={{ backgroundColor: \"rgba(76, 175, 80, 1)\", minHeight: \"15vh\", border: \"1px solid white\", padding: \"5px\"  }}\n          >\n            <Brightness3SharpIcon style={{ color: \"white\", fontSize: 40 }} />{ answers.d }\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"10vh\" }}\n          className=\"footer\"\n        >\n          <div>Game PIN: <span style={{ fontWeight: \"800\" }}>{ pin }</span></div>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { socket } from '../Global/Header';\nimport Button from '@material-ui/core/Button';\nimport { FETCH_NEXT_QUESTION } from '../Events';\n\nexport default class ResultBlock extends Component {\n  constructor() {\n    super();\n    this.state = {\n\n    }\n  }\n\n  handleClick = () => {\n    this.props.onNext();\n    this.props.fetchScoreboard();\n    const data = {\n      pin: this.props.pin,\n      questionNumber: this.props.questionNumber + 1\n    }\n    socket.emit(FETCH_NEXT_QUESTION, data);\n    console.log('Host fetching next question.......');\n  }\n\n  render() {\n    const { answers, answeredA, answeredB, answeredC, answeredD, correct } = this.props;\n    if (correct === null) {\n      return <div>Results loading</div>\n    }\n    return (\n      <div>\n        <div>Correct: { correct }</div>\n        <div>{ answeredA } answered A</div>\n        <div>{ answeredB } answered B</div>\n        <div>{ answeredC } answered C</div>\n        <div>{ answeredD } answered D</div>\n        <div>{ answers.a }</div>\n        <div>{ answers.b }</div>\n        <div>{ answers.c }</div>\n        <div>{ answers.d }</div>\n        <Button variant=\"contained\" color=\"primary\" onClick={ this.handleClick }>\n          Next\n        </Button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { socket } from '../Global/Header';\nimport Button from '@material-ui/core/Button';\nimport { FINISH_GAME } from '../Events';\n\nexport default class Scoreboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n\n    }\n  }\n\n  finishGame = () => {\n    this.props.endGame();\n  }\n\n  handleClick = () => {\n    this.props.nextQuestion();\n  }\n\n  render () {\n    if (this.props.rankedPlayers.length === 0) {\n      return <div>Loading scoreboard</div>\n    }\n\n    let button;\n    console.log('Game status is: ', this.props.gameStatus);\n    if (this.props.gameStatus) {\n      button = <Button variant=\"contained\" color=\"primary\" onClick={ this.handleClick }>Next</Button>\n    } else {\n      button = <Button variant=\"contained\" color=\"primary\" onClick={ this.finishGame }>End</Button>\n    }\n    return (\n      <div>\n        <h1>Scorboard</h1>\n        <Rankings playerRanks={ this.props.rankedPlayers } />\n        { button }\n      </div>\n    )\n  }\n}\n\nconst Rankings = (props) => {\n\n  const playerRankings = props.playerRanks.map((r, i) => (\n    <div key={ i }>\n      { r.rank } - { r.nickname } - { r.score }\n    </div>\n  ))\n\n  return (\n    <div>\n      { playerRankings }\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { socket } from '../Global/Header';\n\nfunction Gameover(props) {\n  return (\n    <div>\n      <FinalRankings rankings={ props.finalRankings } totalNumberOfQuestions={ props.totalNumberOfQuestions } />\n    </div>\n  )\n}\n\nconst FinalRankings = (props) => {\n\n  const playerRankings = props.rankings.map((r, i) => (\n    <div key={ i }>\n      { r.rank } - { r.nickname } - { r.score } pts.\n    </div>\n  ))\n\n  return (\n    <div>\n      { playerRankings }\n    </div>\n  )\n}\n\nexport default Gameover;\n","import React, { Component } from 'react';\nimport { socket } from '../Global/Header';\nimport QuestionBlockIntro from './QuestionBlockIntro';\nimport QuestionBlock from './QuestionBlock';\nimport ResultBlock from './ResultBlock';\nimport Scoreboard from './Scoreboard';\nimport Gameover from './Gameover';\nimport { FETCH_QUESTION, RECEIVE_QUESTION, QUESTION_RESULT, FETCH_SCOREBOARD, RECEIVE_SCOREBOARD, NEXT_QUESTION, GAME_OVER, FINISH_GAME, NEXT } from '../Events';\n\nexport default class Gameblock extends Component {\n  constructor() {\n    super();\n    this.state = {\n      step: 1,\n      quizId: '',\n      pin: null,\n      questionNumber: 1,\n      totalNumberOfQuestions: null,\n      questionStatus: true,\n      question: null,\n      answers: [],\n      answeredA: 0,\n      answeredB: 0,\n      answeredC: 0,\n      answeredD: 0,\n      correct: null,\n      gameStatus: true,\n      rankedPlayers: []\n    };\n  }\n\n  // Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  }\n\n  nextQuestion = () => {\n    this.setState({\n      step: 1,\n      rankedPlayers: [],\n      answeredA: 0,\n      answeredB: 0,\n      answeredC: 0,\n      answeredD: 0,\n      correct: null\n    })\n    const { pin } = this.state;\n    socket.emit(NEXT, pin);\n  }\n\n  endGame = () => {\n    this.setState({\n      step: 5\n    })\n    const pin = this.state.pin;\n    socket.emit(FINISH_GAME, pin);\n  }\n\n  fetchScoreboard = () => {\n    const { quizId, pin } = this.state;\n    socket.emit(FETCH_SCOREBOARD, { quizId: quizId, pin: pin });\n    console.log('Host requesting for scoreboard.');\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const quizId = parsed.quizId;\n    const pin = parsed.pin;\n    console.log('Question for room with pin', pin);\n    this.setState({\n      pin: pin,\n      quizId: quizId\n    })\n\n    socket.emit(FETCH_QUESTION, pin);\n\n    socket.on(RECEIVE_QUESTION, data => {\n      const { questionNumber, question, totalNumberOfQuestions } = data;\n      console.log('Receiving question: ', data);\n      this.setState({\n        questioNumber: questionNumber,\n        question: question.question,\n        answers: question.answers,\n        correct: question.correct,\n        totalNumberOfQuestions: totalNumberOfQuestions\n      })\n    })\n\n    socket.on(QUESTION_RESULT, data => {\n      const { answeredA, answeredB, answeredC, answeredD, correctAnswer } = data;\n      const { step, quizId, pin, questionNumber } = this.state;\n      console.log(data);\n      this.setState({\n        answeredA: answeredA,\n        answeredB: answeredB,\n        answeredC: answeredC,\n        answeredD: answeredD,\n        correct: correctAnswer,\n        step: 3\n      });\n\n    });\n\n    socket.on(RECEIVE_SCOREBOARD, rankedPlayers => {\n      console.log('Receiving ranked players for scoreboard: ', rankedPlayers);\n      this.setState({\n        rankedPlayers: rankedPlayers\n      })\n    })\n\n    socket.on(NEXT_QUESTION, data => {\n      const { questionNumber, question, numberOfPlayers } = data;\n      console.log('Receiving next question: ', data);\n      this.setState({\n        questionNumber: questionNumber,\n        question: question.question,\n        answers: question.answers,\n        correct: question.correct,\n      })\n    });\n\n    socket.on(GAME_OVER, data => {\n      this.setState({\n        gameStatus: false,\n        rankedPlayers: data\n      })\n    })\n  }\n\n  render() {\n    const { step } = this.state;\n    const { pin, questionNumber, totalNumberOfQuestions, question, answers, answeredA, answeredB, answeredC, answeredD, correct, playersAnswered, rankedPlayers, gameStatus } = this.state;\n    console.log('Step: ', step);\n    switch(step) {\n      case 1:\n        return (\n          <QuestionBlockIntro\n            nextStep={ this.nextStep }\n            handleChange={ this.handleChange }\n            questionNumber={ questionNumber }\n            question={ question }\n            totalNumberOfQuestions={ totalNumberOfQuestions }\n          />\n        )\n      case 2:\n        return (\n          <QuestionBlock\n            nextStep={ this.nextStep }\n            pin={ pin }\n            question={ question }\n            answers={ answers }\n            playersAnswered={ playersAnswered }\n          />\n        )\n      case 3:\n        return (\n          <ResultBlock\n            answers={ answers }\n            answeredA={ answeredA }\n            answeredB={ answeredB }\n            answeredC={ answeredC }\n            answeredD={ answeredD }\n            correct={ correct }\n            pin={ pin }\n            questionNumber={ questionNumber }\n            onNext={  this.nextStep }\n            fetchScoreboard={ this.fetchScoreboard }\n          />\n        );\n      case 4:\n        return (\n          <Scoreboard\n            pin={ pin }\n            rankedPlayers={ rankedPlayers }\n            nextQuestion={ this.nextQuestion }\n            endGame={ this.endGame }\n            gameStatus={ gameStatus }\n          />\n        )\n      case 5:\n        return (\n          <Gameover\n            totalNumberOfQuestions={ totalNumberOfQuestions }\n            finalRankings={ rankedPlayers }\n          />\n        )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport './Preview.css';\nimport { socket } from '../Global/Header';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class Preview extends Component {\n\n  componentDidMount() {\n    setTimeout(() => this.props.nextStep(), 5000);\n  }\n\n  render() {\n    const { pin, nickname, questionNumber, totalNumberOfQuestions } = this.props;\n    console.log('Hitting preview page');\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"space-between\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"15vh\" }}\n          className=\"top-info\"\n        >\n          <div>\n            <span>PIN: { pin }</span>\n            <span>{ questionNumber } of { totalNumberOfQuestions }</span>\n          </div>\n          <div>\n            { nickname }\n          </div>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"85vh\" }}\n          className=\"question-number\"\n        >\n          Question { questionNumber }\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './Answer.css';\nimport { socket } from '../Global/Header';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport GradeIcon from '@material-ui/icons/Grade';\nimport FiberManualRecordRoundedIcon from '@material-ui/icons/FiberManualRecordRounded';\nimport Brightness3SharpIcon from '@material-ui/icons/Brightness3Sharp';\n\nexport default class Answer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      answer: '',\n      buttonsOn: true\n    }\n  }\n\n  handleClick = (event) => {\n    console.log('Player has submitted answer:', event.currentTarget.value);\n    this.props.submitAnswer(event.currentTarget.value);\n    this.setState({\n      buttonsOn: false\n    })\n  }\n\n  render() {\n    if (!this.state.buttonsOn) {\n      return (<div>Answer submitted. Waiting for other players.</div>)\n    }\n\n    const { pin, nickname, questionNumber, totalNumberOfQuestions } = this.props;\n\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"space-between\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"15vh\" }}\n          className=\"answers-top-info\"\n        >\n          <div>\n            <span>PIN: { pin }</span>\n            <span>{ questionNumber } of { totalNumberOfQuestions }</span>\n          </div>\n          <div>\n            { nickname }\n          </div>\n        </Grid>\n        <Grid\n          item\n          container\n          spacing={1}\n          xs={12}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"85vh\" }}\n          className=\"answer-block\"\n        >\n          <Grid\n            item\n            xs={6}\n          >\n            <Button variant=\"contained\" style={{ backgroundColor: \"rgba(244, 67, 54, 1)\", minHeight: \"42vh\" }} value=\"a\" onClick={ this.handleClick } fullWidth>\n              <FavoriteIcon style={{ color: \"white\", fontSize: 50 }} />\n            </Button>\n          </Grid>\n          <Grid\n            item\n            xs={6}\n          >\n            <Button variant=\"contained\" style={{ backgroundColor: \"rgba(63, 81, 181, 1)\", minHeight: \"42vh\" }} value=\"b\" onClick={ this.handleClick } fullWidth>\n              <GradeIcon style={{ color: \"white\", fontSize: 50 }} />\n            </Button>\n          </Grid>\n          <Grid\n            item\n            xs={6}\n          >\n            <Button variant=\"contained\" style={{ backgroundColor: \"rgba(255, 152, 0, 1)\", minHeight: \"42vh\" }} value=\"c\" onClick={ this.handleClick } fullWidth>\n              <FiberManualRecordRoundedIcon style={{ color: \"white\", fontSize: 50 }} />\n            </Button>\n          </Grid>\n          <Grid\n            item\n            xs={6}\n          >\n            <Button variant=\"contained\" style={{ backgroundColor: \"rgba(76, 175, 80, 1)\", minHeight: \"42vh\" }} value=\"d\" onClick={ this.handleClick } fullWidth>\n              <Brightness3SharpIcon style={{ color: \"white\", fontSize: 50 }} />\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { socket } from '../Global/Header';\n\nexport default class Results extends Component {\n\n  render () {\n    const correct = this.props.lastCorrect;\n    let showResult;\n\n    if (correct) {\n      showResult = <div>Correct</div>\n    } else {\n      showResult = <div>Incorrect</div>\n    }\n\n    const streak = this.props.streak;\n    let showStreak;\n\n    if (streak > 0) {\n      showStreak = <div>{`Your streak is ${ streak }`}</div>\n    } else {\n      showStreak = <></>\n    }\n\n    const rank = this.props.rank;\n    let showRank;\n\n    if (rank === 1) {\n      showRank = <div>You are in 1st place</div>\n    } else if (rank === 2) {\n      showRank = <div>You are in 2nd place</div>\n    } else if (rank === 3) {\n      showRank = <div>You are in 3rd place</div>\n    } else {\n      showRank = <div>{`You are in ${ rank }th place`}</div>\n    }\n\n    return (\n      <div>\n        <div>{ showResult }</div>\n        <div>{ showStreak }</div>\n        <div>{ showRank }</div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { socket } from '../Global/Header';\n\nfunction Ranking(props) {\n  return (\n    <div>\n      <Rank rank={ props.rank } />\n      <div>Score: { props.score }</div>\n    </div>\n  )\n}\n\nconst Rank = (props) => {\n\n  let finalRank;\n\n  if (props.rank === 1) {\n    finalRank = <div>1st place</div>\n  } else if (props.rank === 2) {\n    finalRank = <div>2nd place</div>\n  } else if (props.rank === 3) {\n    finalRank = <div>3rd place</div>\n  } else {\n    finalRank=<div>{`${props.rank}th place`}</div>\n  }\n\n  return (\n    <div>\n      { finalRank }\n    </div>\n  )\n}\n\nexport default Ranking;\n","import React, { Component } from 'react';\nimport { socket } from '../Global/Header';\nimport Preview from './Preview';\nimport Answer from './Answer';\nimport Result from './Result';\nimport Ranking from './Ranking';\nimport { FETCH_NUMBER_OF_QUESTIONS, RECEIVE_NUMBER_OF_QUESTIONS, RECEIVE_ANSWER_OPTIONS, ANSWER_SUBMITTED, ANSWER_RESULT, QUESTION_RESULT, FETCH_SCORE, PLAYER_RESULTS, RECEIVE_NEXT_ANSWER_OPTIONS, GAME_OVER, PLAYER_RANK, FINAL_RANK, FINAL, GO_TO_NEXT } from '../Events';\n\nexport default class Gameblock extends Component {\n  constructor() {\n    super();\n    this.state = {\n      step: 1,\n      nickname: null,\n      pin: null,\n      answer: null,\n      score: 0,\n      streak: 0,\n      rank: 0,\n      lastCorrect: false,\n      totalCorrect: 0,\n      questionNumber: 1,\n      totalNumberOfQuestions: null,\n      answers: []\n    };\n  }\n\n  // Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  }\n\n  submitAnswer = (letter) => {\n    console.log('Answer submitted:', letter)\n    this.setState({\n      answer: letter\n    })\n\n    const data = {\n      answer: letter,\n      pin: this.state.pin\n    }\n\n    socket.emit(ANSWER_SUBMITTED, data);\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const nickname = parsed.nickname;\n    const pin = parsed.pin;\n    console.log('Player joined room with pin:', pin);\n    this.setState({\n      nickname: nickname,\n      pin: pin\n    })\n\n    socket.emit(FETCH_NUMBER_OF_QUESTIONS, pin)\n\n\n    socket.on(RECEIVE_NUMBER_OF_QUESTIONS, count => {\n      this.setState({\n        totalNumberOfQuestions: parseInt(count)\n      })\n    })\n\n    socket.on(RECEIVE_ANSWER_OPTIONS, data => {\n      this.setState({\n        questionNumber: data.questionNumber,\n        // totalNumberOfQuestions: data.totalNumberOfQuestions,\n        answers: data.answers\n      })\n    })\n\n    socket.on(ANSWER_RESULT, result => {\n      this.setState({\n        lastCorrect: true\n      })\n    })\n\n    socket.on(QUESTION_RESULT, data => {\n      const { nickname, pin } = this.state;\n      const info = {\n        nickname: nickname,\n        pin: pin\n      }\n\n      socket.emit(FETCH_SCORE, info);\n    })\n\n    socket.on(PLAYER_RESULTS, data => {\n      const { step } = this.state;\n      const { score, rank, streak, lastCorrect } = data;\n      this.setState({\n        score: score,\n        streak: streak,\n        rank: rank,\n        lastCorrect: lastCorrect,\n        step: step + 1\n      })\n    });\n\n    socket.on(RECEIVE_NEXT_ANSWER_OPTIONS, data => {\n      const { step } = this.state;\n      const { questionNumber, totalNumberOfQuestions, answers } = data;\n      this.setState({\n        questionNumber: questionNumber,\n        totalNumberOfQuestions: totalNumberOfQuestions,\n        answers: answers\n      })\n    })\n\n    socket.on(GO_TO_NEXT, () => {\n      this.setState({\n        step: 1\n      })\n    })\n\n    socket.on(GAME_OVER, () => {\n      const pin = this.state.pin;\n      socket.emit(PLAYER_RANK, pin);\n    })\n\n    socket.on(FINAL_RANK, data => {\n      const { score, totalCorrect, rank } = data;\n      this.setState({\n        score: score,\n        totalCorrect: totalCorrect,\n        rank: rank\n      })\n    })\n\n    socket.on(FINAL, () => {\n      const { step } = this.state;\n      this.setState({\n        step: 4\n      })\n    })\n  }\n\n  render() {\n    const { step } = this.state;\n    const { pin, nickname, answer, score, streak, lastCorrect, questionNumber, totalNumberOfQuestions, answers, rank } = this.state;\n    console.log('Current step:', step);\n    switch(step) {\n      case 1:\n        return (\n          <Preview\n            nextStep={ this.nextStep }\n            pin={ pin }\n            nickname={ nickname }\n            questionNumber={ questionNumber }\n            totalNumberOfQuestions={ totalNumberOfQuestions }\n          />\n        )\n\n      case 2:\n        return (\n          <Answer\n            submitAnswer={ this.submitAnswer }\n            pin={ pin }\n            nickname={ nickname }\n            questionNumber={ questionNumber }\n            totalNumberOfQuestions={ totalNumberOfQuestions }\n            answers={ answers }\n          />\n        )\n      case 3:\n        return (\n          <Result\n            lastCorrect={ lastCorrect }\n            streak={ streak }\n            rank={ rank }\n            score={ score }\n          />\n        );\n      case 4:\n        return (\n          <Ranking\n            rank={ rank }\n            score={ score }\n          />\n        )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { socket } from '../Global/Header';\nimport './Instructions.css';\nimport Grid from '@material-ui/core/Grid';\nimport { GAME_HAS_STARTED } from '../Events';\n\nexport default class Instructions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nickname: null,\n      pin: null\n    };\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const nickname = parsed.nickname;\n    const pin = parsed.pin;\n    console.log('Instruction page for player in room:', pin);\n    this.setState({\n      nickname: nickname,\n      pin: pin\n    })\n\n    socket.on(GAME_HAS_STARTED, () => {\n      this.props.history.push(`/getready?nickname=${ this.state.nickname }&pin=${ this.state.pin }`);\n   })\n  }\n\n  render() {\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"space-between\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"15vh\" }}\n          className=\"info\"\n        >\n          <div>PIN: { this.state.pin }</div>\n          <div>{ this.state.nickname }</div>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          spacing={4}\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{ minHeight: \"85vh\" }}\n          className=\"main-info\"\n        >\n          <Grid\n            item\n            xs={12}\n            className=\"in\"\n          >\n            You're in\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            className=\"name\"\n          >\n            See your nickname on screen?\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './GetReady.css';\nimport { socket } from '../Global/Header';\nimport { READY } from '../Events';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class GetReady extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nickname: null,\n      pin: null\n    };\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const nickname = parsed.nickname;\n    const pin = parsed.pin;\n    console.log('Get ready page for player in room:', pin);\n    this.setState({\n      nickname: nickname,\n      pin: pin\n    })\n\n    setTimeout(() => {\n      this.props.history.push(`/playblock?nickname=${ this.state.nickname }&pin=${ this.state.pin }`)\n    }, 5000);\n  }\n\n  render() {\n    return(\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"space-between\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"15vh\" }}\n          className=\"info\"\n        >\n          <div>PIN: { this.state.pin }</div>\n          <div>{ this.state.nickname }</div>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"85vh\" }}\n          className=\"ready-block\"\n        >\n          Get ready\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React from 'react';\nimport JoinGame from './Player/JoinGame';\nimport QuizForm from './CreateQuiz/QuizForm';\nimport Quiz from './Quiz/Quiz';\nimport Lobby from './Host/Lobby';\nimport Start from './Host/Start';\nimport Gameblock from './Host/Gameblock';\nimport Playblock from './Player/Playblock';\nimport Instructions from './Player/Instructions';\nimport GetReady from './Player/GetReady';\nimport { Header } from './Global/Header';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <HashRouter>\n        <Switch>\n          <Route exact path='/' component={ JoinGame }/>\n          <Route exact path='/instructions' component={ Instructions }/>\n          <Route exact path='/getready' component={ GetReady }/>\n          <Route exact path='/lobby' component={ Lobby }/>\n          <Route exact path='/start' component={ Start }/>\n          <Route exact path='/gameblock' component={ Gameblock }/>\n          <Route exact path='/playblock' component={ Playblock }/>\n          <Route exact path='/quizzes/new' component={ QuizForm }/>\n          <Route path='/quizzes/:quizId' component={ Quiz }/>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  GAME_INTRO:\"GAME_INTRO\",\n  FETCH_NUMBER_OF_QUESTIONS:\"FETCH_NUMBER_OF_QUESTIONS\",\n  RECEIVE_NUMBER_OF_QUESTIONS:\"RECEIVE_NUMBER_OF_QUESTIONS\",\n  FETCH_INTRO:\"FETCH_INTRO\",\n  HOST_JOINED:\"HOST_JOINED\",\n  HOST_STARTED_GAME:\"HOST_STARTED_GAME\",\n  SHOW_PIN:\"SHOW_PIN\",\n  UPDATE_PLAYERS_IN_LOBBY:\"UPDATE_PLAYERS_IN_LOBBY\",\n  PLAYER_JOINED:\"PLAYER_JOINED\",\n  PLAYER_JOINED_SUCCESSFULLY:\"PLAYER_JOINED_SUCCESSFULLY\",\n  WAITING_FOR_START:\"WAITING_FOR_START\",\n  GAME_NOT_FOUND:\"GAME_NOT_FOUND\",\n  GAME_HAS_STARTED:\"GAME_HAS_STARTED\",\n  READY:\"READY\",\n  FETCH_QUESTION:\"FETCH_QUESTION\",\n  RECEIVE_QUESTION:\"RECEIVE_QUESTION\",\n  RECEIVE_ANSWER_OPTIONS:\"RECEIVE_ANSWER_OPTIONS\",\n  ANSWER_SUBMITTED:\"ANSWER_SUBMITTED\",\n  UPDATE_PLAYERS_ANSWERED:\"UPDATE_PLAYERS_ANSWERED\",\n  ANSWER_RESULT:\"ANSWER_RESULT\",\n  QUESTION_RESULT:\"QUESTION_RESULT\",\n  QUESTION_END:\"QUESTION_END\",\n  FETCH_TIME:\"FETCH_TIME\",\n  TIME:\"TIME\",\n  FETCH_SCOREBOARD:\"FETCH_SCOREBOARD\",\n  RECEIVE_SCOREBOARD:\"RECEIVE_SCOREBOARD\",\n  FETCH_SCORE:\"FETCH_SCORE\",\n  PLAYER_RESULTS:\"PLAYER_RESULTS\",\n  FETCH_NEXT_QUESTION:\"FETCH_NEXT_QUESTION\",\n  NEXT_QUESTION:\"NEXT_QUESTION\",\n  NEXT:\"NEXT\",\n  GO_TO_NEXT:\"GO_TO_NEXT\",\n  RECEIVE_NEXT_ANSWER_OPTIONS:\"RECEIVE_NEXT_ANSWER_OPTIONS\",\n  GAME_OVER:\"GAME_OVER\",\n  FINISH_GAME:\"FINISH_GAME\",\n  PLAYER_RANK:\"PLAYER_RANK\",\n  FINAL_RANK:\"FINAL_RANK\",\n  FINAL:\"FINAL\"\n}\n"],"sourceRoot":""}