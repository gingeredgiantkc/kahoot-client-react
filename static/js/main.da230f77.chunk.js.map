{"version":3,"sources":["components/Host/Music/theme.mp3","components/Global/Header.js","components/utils.js","components/Quiz/Quiz.js","components/Host/Lobby/Lobby.js","components/Host/Start/Start.js","components/Host/QuestionBlockIntro/QuestionBlockIntro.js","components/Host/QuestionBlock/QuestionBlock.js","components/Host/ResultBlock/ResultBlock.js","components/Host/Scoreboard/Scoreboard.js","components/Host/Gameover/Gameover.js","components/Host/Gameblock/Gameblock.js","components/Player/JoinGame/JoinGame.js","components/Quiz/NewQuiz/QuizDetailsForm/QuizDetailsForm.js","components/Quiz/NewQuiz/QuestionsForm/QuestionsForm.js","components/Quiz/NewQuiz/Confirm/Confirm.js","components/Quiz/NewQuiz/QuizForm/QuizForm.js","components/Player/Preview/Preview.js","components/Player/Answer/Answer.js","components/Player/Result/Result.js","components/Player/Ranking/Ranking.js","components/Player/Playblock/Playblock.js","components/Player/Instructions/Instructions.js","components/Player/GetReady/GetReady.js","components/App.js","serviceWorker.js","index.js","components/Events.js"],"names":["module","exports","socket","QuizInfo","getQuiz","id","axios","get","Quiz","state","name","category","questions","console","log","this","props","match","params","quizId","then","data","_id","setState","Container","maxWidth","to","Button","variant","color","Component","PreviewQuestions","length","map","q","i","key","style","fontWeight","question","Header","endpoint","io","Lobby","handleMusic","event","preventDefault","muted","startGame","emit","HOST_STARTED_GAME","pin","players","playersCount","disabled","require","parse","location","search","HOST_JOINED","on","SHOW_PIN","UPDATE_PLAYERS_IN_LOBBY","playersData","off","button","onClick","className","ref","src","theme","autoPlay","Grid","container","direction","item","xs","minHeight","justify","alignItems","marginTop","paddingLeft","textAlign","paddingRight","fontSize","Players","playerNames","p","nickname","Start","quizName","numberOfQuestions","parsed","parseInt","FETCH_INTRO","GAME_INTRO","setTimeout","history","push","QuestionBlockIntro","nextStep","clearTimeout","questionNumber","totalNumberOfQuestions","QuestionBlock","timer","time","clearInterval","intervalId","QUESTION_END","playersAnswered","setInterval","UPDATE_PLAYERS_ANSWERED","FETCH_TIME","playerId","TIME","answers","backgroundColor","border","padding","a","b","c","d","ResultBlock","handleClick","onNext","fetchScoreboard","FETCH_NEXT_QUESTION","answeredA","answeredB","answeredC","answeredD","correct","Scoreboard","finishGame","endGame","nextQuestion","rankedPlayers","gameStatus","playerRanks","Rankings","playerRankings","r","rank","score","FinalRankings","rankings","Gameover","finalRankings","Gameblock","step","NEXT","FINISH_GAME","FETCH_SCOREBOARD","questionStatus","FETCH_QUESTION","RECEIVE_QUESTION","questioNumber","QUESTION_RESULT","correctAnswer","RECEIVE_SCOREBOARD","NEXT_QUESTION","numberOfPlayers","GAME_OVER","handleChange","darkGreyTheme","createMuiTheme","palette","primary","main","grey","JoinGame","target","value","handleSubmit","PLAYER_JOINED","GAME_NOT_FOUND","message","PLAYER_JOINED_SUCCESSFULLY","error","lg","md","onSubmit","TextField","inputProps","placeholder","onChange","margin","required","fullWidth","type","textDecoration","QuizDetailsForm","continue","values","sm","spacing","label","QuestionsForm","back","prevStep","saveQuestion","Questions","quizQuestions","QuestionForm","handleAnswerChange","prevState","FormControl","width","InputLabel","Select","MenuItem","Confirm","saveQuiz","QuizDetails","QuestionList","URL","model","QuizForm","async","postRequest","post","res","content","Preview","Answer","currentTarget","submitAnswer","buttonsOn","answer","Results","showResult","lastCorrect","showStreak","streak","showRank","Rank","finalRank","Ranking","letter","ANSWER_SUBMITTED","totalCorrect","FETCH_NUMBER_OF_QUESTIONS","RECEIVE_NUMBER_OF_QUESTIONS","count","RECEIVE_ANSWER_OPTIONS","ANSWER_RESULT","result","info","FETCH_SCORE","PLAYER_RESULTS","RECEIVE_NEXT_ANSWER_OPTIONS","GO_TO_NEXT","PLAYER_RANK","FINAL_RANK","FINAL","Instructions","GAME_HAS_STARTED","GetReady","App","exact","path","component","Playblock","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","WAITING_FOR_START","READY"],"mappings":"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","file":"static/js/main.da230f77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/theme.bcd504e3.mp3\";","import React, { Component } from 'react';\nimport io from 'socket.io-client';\n\nlet socket;\n\nclass Header extends Component {\n  constructor() {\n    console.log('<Header />')\n    super();\n    this.state = {\n      endpoint: 'https://quizy-server.herokuapp.com/'\n      // endpoint: 'http://localhost:3000'\n    };\n  socket = io(this.state.endpoint);\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport { Header, socket };\n","import axios from 'axios';\n\nconst QuizInfo = {\n  getQuiz(id) {\n    return axios.get(`https://quizy-server.herokuapp.com/quizzes/${ id }`)\n  }\n}\n\nexport default QuizInfo;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport QuizInfo from '../utils';\nimport { Container } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nexport default class Quiz extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      category: '',\n      questions: []\n    }\n  }\n\n  componentDidMount() {\n    console.log( this.props.match.params );\n    const { quizId } = this.props.match.params;\n    console.log( quizId );\n    QuizInfo.getQuiz( quizId ).then(( { data } ) => {\n      const { _id, name, category, questions } = data;\n      console.log(name, category, questions);\n      this.setState({\n        id: _id,\n        name: name,\n        category: category,\n        questions: questions\n      })\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Container maxWidth=\"md\">\n          <h1>Quiz preview</h1>\n          <h2>Quiz: { this.state.name }</h2>\n          <h2>Category: { this.state.category }</h2>\n          <PreviewQuestions questions={ this.state.questions } />\n          <Link to={`/lobby?quizId=${ this.state.id }`}>\n            <Button variant=\"contained\" color=\"primary\">\n              Host Game\n            </Button>\n          </Link>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst PreviewQuestions = (props) => {\n  if (props.questions.length === 0) {\n    return (<div>Questions are loading.</div>)\n  }\n\n  const questions = props.questions.map((q, i) => (\n    <div key={ i }>\n      <div style={{ fontWeight: \"bold\" }}>Question { i + 1 }</div>\n      <p>{ q.question }</p>\n    </div>\n  ))\n\n  return (\n    <div>\n      { questions }\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport './Lobby.scss';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { socket } from '../../Global/Header';\nimport { HOST_JOINED, SHOW_PIN, UPDATE_PLAYERS_IN_LOBBY, HOST_STARTED_GAME } from '../../Events';\nimport theme from '../Music/theme.mp3';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\n\nexport default class Lobby extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quizId: null,\n      pin: null,\n      players: null,\n      playersCount: null,\n      disabled: true,\n      muted: false\n    };\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const quizId = parsed.quizId;\n    console.log( quizId );\n    this.setState({\n      quizId: quizId\n    })\n\n    socket.emit(HOST_JOINED, quizId);\n\n    socket.on(SHOW_PIN, data => {\n      this.setState({\n        pin: data.pin\n      })\n    })\n\n    socket.on(UPDATE_PLAYERS_IN_LOBBY, playersData => {\n      console.log(playersData);\n      if (playersData.playersCount === 0) {\n        this.setState({\n          players: null,\n          playersCount: null\n        })\n      } else {\n        this.setState({\n          players: playersData.players,\n          playersCount: playersData.playersCount,\n          disabled: false\n        })\n      }\n    })\n  }\n\n  handleMusic = event => {\n    event.preventDefault();\n    this.setState({\n      muted: !this.state.muted\n    })\n  }\n\n  startGame = () => {\n    console.log('Starting game.');\n    socket.emit(HOST_STARTED_GAME, this.state.pin);\n  }\n\n  componentWillUnmount() {\n    socket.off(SHOW_PIN);\n    socket.off(UPDATE_PLAYERS_IN_LOBBY);\n  }\n\n  render() {\n    let name;\n    if (this.state.playersCount === 1) {\n      name = <span>player</span>\n    } else {\n      name = <span>players</span>\n    }\n\n    let button;\n    if (!this.state.muted) {\n      button = <a onClick={ this.handleMusic }><VolumeOffIcon style={{ color: \"rgba(255, 255, 255, 1)\" }}/></a>\n    } else {\n      button = <a onClick={ this.handleMusic }><VolumeUpIcon style={{ color: \"rgba(255, 255, 255, 1)\" }}/></a>\n    }\n\n    console.log(this.state);\n    return (\n      <div className=\"main\">\n        <div className=\"music\">\n          { button }\n        </div>\n        <div>\n          <audio ref=\"audio_tag\" src={ theme } autoPlay muted={ this.state.muted }/>\n        </div>\n        <Grid\n          container\n          direction=\"column\"\n        >\n          <Grid\n            item\n            xs={12}\n            style={{ minHeight: \"20vh\" }}\n          >\n            <div className=\"title\">\n              <h1 className=\"join\">Join with Game PIN: </h1>\n              <h1 className=\"pin\">{ this.state.pin }</h1>\n            </div>\n          </Grid>\n          <Grid\n            item\n            container\n            xs={12}\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style={{ minHeight: \"10vh\", marginTop: \"30px\" }}\n          >\n            <Grid\n              item\n              xs={4}\n              style={{ paddingLeft: \"50px\" }}\n            >\n              <div className=\"players-count\">\n                { this.state.playersCount || 0 } { name }\n              </div>\n            </Grid>\n            <Grid\n              item\n              xs={4}\n              style={{ textAlign: \"center\" }}\n            >\n              <h1 className=\"logo\">QUIZY</h1>\n            </Grid>\n            <Grid\n              item\n              xs={4}\n              style={{ textAlign: \"right\", paddingRight: \"50px\" }}\n            >\n              <Link to={`/start?quizId=${ this.state.quizId }&pin=${ this.state.pin }`}>\n                <Button variant=\"contained\" color=\"primary\" className=\"start-btn\" onClick={ this.startGame } disabled={ this.state.disabled } style={{ fontSize: \"1.6rem\" }}>\n                  Start\n                </Button>\n              </Link>\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n          >\n            <Players players={ this.state.players } playersCount={ this.state.playersCount }/>\n          </Grid>\n          <Grid>\n\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst Players = (props) => {\n\n  if (props.players === null || props.playersCount === null) {\n    return null\n  }\n\n  const playerNames = props.players.map((p, i) => (\n    <div key={ p._id }>\n      { p.nickname }\n    </div>\n  ))\n\n  return (\n    <div className=\"names\">\n      { playerNames }\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport './Start.scss';\nimport { socket } from '../../Global/Header';\nimport { GAME_INTRO, FETCH_INTRO } from '../../Events';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class Start extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pin: 0,\n      quizId: '',\n      quizName: null,\n      numberOfQuestions: 0,\n    };\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const quizId = parsed.quizId;\n    const pin = parseInt(parsed.pin);\n    console.log( pin );\n    this.setState({\n      pin: pin,\n      quizId: quizId\n    })\n\n    socket.emit(FETCH_INTRO, pin);\n\n    socket.on(GAME_INTRO, data => {\n      console.log( data );\n      const { quizName, numberOfQuestions } = data;\n      this.setState({\n        quizName: quizName,\n        numberOfQuestions: numberOfQuestions\n      })\n\n      setTimeout(() => {\n        this.props.history.push(`/gameblock?quizId=${ this.state.quizId }&pin=${ this.state.pin }`);\n      }, 5000);\n\n    });\n\n  }\n\n  render() {\n    return(\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"15vh\" }}\n          className=\"title\"\n        >\n          <h1>{ this.state.quizName }</h1>\n        </Grid>\n        <Grid\n          item\n          container\n          direction=\"column\"\n          xs={12}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"75vh\" }}\n          className=\"middle\"\n        >\n          <div className=\"questions\">{ this.state.numberOfQuestions} Questions</div>\n          <div>Are you ready?</div>\n        </Grid>\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"10vh\" }}\n          className=\"footer\"\n        >\n          <div>Game PIN: <span style={{ fontWeight: \"800\" }}>{ this.state.pin }</span></div>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './QuestionBlockIntro.scss';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class QuestionBlockIntro extends Component {\n\n  componentDidMount() {\n    this.id = setTimeout(() => this.props.nextStep(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.id);\n  }\n\n  render() {\n    const { questionNumber, question, totalNumberOfQuestions } = this.props\n    return (\n      <Grid\n        container\n        xs={12}\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: \"100vh\" }}\n        className=\"question-block\"\n      >\n        <div className=\"question-tracker\">\n          { questionNumber } of { totalNumberOfQuestions }\n        </div>\n        <Grid\n          item\n          container\n          xs={10}\n          alignItems=\"center\"\n          justify=\"center\"\n          className=\"main-question\"\n        >\n          { question }\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './QuestionBlock.scss';\nimport { socket } from '../../Global/Header';\nimport { QUESTION_END, FETCH_TIME, TIME, UPDATE_PLAYERS_ANSWERED } from '../../Events';\nimport Grid from '@material-ui/core/Grid';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport GradeIcon from '@material-ui/icons/Grade';\nimport FiberManualRecordRoundedIcon from '@material-ui/icons/FiberManualRecordRounded';\nimport Brightness3SharpIcon from '@material-ui/icons/Brightness3Sharp';\n\nexport default class QuestionBlock extends Component {\n  constructor() {\n    super();\n    this.state = {\n      time: 20,\n      playersAnswered: 0,\n      intervalId: ''\n    }\n  }\n\n  timer = () => {\n    this.setState({\n      time: this.state.time - 1\n    })\n\n    if (this.state.time <= 0 ) {\n      clearInterval(this.state.intervalId);\n      const pin = this.props.pin;\n      socket.emit(QUESTION_END, pin);\n      this.props.nextStep();\n    }\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(this.timer, 1000);\n    this.setState({\n      intervalId: intervalId\n    })\n\n    socket.on(UPDATE_PLAYERS_ANSWERED, playersAnswered => {\n      this.setState({\n        playersAnswered: playersAnswered\n      })\n    })\n\n    socket.on(FETCH_TIME, playerId => {\n\n      const data = {\n        pin: this.props.pin,\n        playerId: playerId,\n        time: this.state.time\n      }\n\n      socket.emit(TIME, data);\n    })\n  }\n\n  componentWillUnmount() {\n    // WORKS MORE EFFICIENTLY WITHOUT THESE? CHECK AGAIN.\n    // socket.off(UPDATE_PLAYERS_ANSWERED);\n    // socket.off(FETCH_TIME);\n    clearInterval(this.state.intervalId);\n  }\n\n  render() {\n    let name;\n    if (this.state.playersAnswered === 1) {\n      name = <span>answer</span>\n    } else {\n      name = <span>answers</span>\n    }\n\n    const { pin, question, answers } = this.props;\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"20vh\" }}\n          className=\"top-question\"\n        >\n          <h1>{ question }</h1>\n        </Grid>\n        <Grid\n          item\n          container\n          justify=\"space-between\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"40vh\" }}\n          className=\"controls\"\n        >\n          <div className=\"time\">{ this.state.time }</div>\n          <div className=\"answer-count\">{ this.state.playersAnswered }{ name }</div>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"30vh\" }}\n          className=\"host-answers\"\n        >\n          <Grid\n            item\n            container\n            alignItems=\"center\"\n            xs={6}\n            style={{ backgroundColor: \"rgba(244, 67, 54, 1)\", minHeight: \"15vh\", border: \"1px solid white\", padding: \"5px\" }}\n          >\n            <FavoriteIcon style={{ color: \"white\", fontSize: 40 }} />{ answers.a }\n          </Grid>\n          <Grid\n            item\n            container\n            alignItems=\"center\"\n            xs={6}\n            style={{ backgroundColor: \"rgba(63, 81, 181, 1)\", minHeight: \"15vh\", border: \"1px solid white\", padding: \"5px\" }}\n          >\n            <GradeIcon style={{ color: \"white\", fontSize: 40 }} />{ answers.b }\n          </Grid>\n          <Grid\n            item\n            container\n            alignItems=\"center\"\n            xs={6}\n            style={{ backgroundColor: \"rgba(255, 152, 0, 1)\", minHeight: \"15vh\", border: \"1px solid white\", padding: \"5px\" }}\n          >\n            <FiberManualRecordRoundedIcon style={{ color: \"white\", fontSize: 40 }} />{ answers.c }\n          </Grid>\n          <Grid\n            item\n            container\n            alignItems=\"center\"\n            xs={6}\n            style={{ backgroundColor: \"rgba(76, 175, 80, 1)\", minHeight: \"15vh\", border: \"1px solid white\", padding: \"5px\"  }}\n          >\n            <Brightness3SharpIcon style={{ color: \"white\", fontSize: 40 }} />{ answers.d }\n          </Grid>\n        </Grid>\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"10vh\" }}\n          className=\"footer\"\n        >\n          <div>Game PIN: <span style={{ fontWeight: \"800\" }}>{ pin }</span></div>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { socket } from '../../Global/Header';\nimport Button from '@material-ui/core/Button';\nimport { FETCH_NEXT_QUESTION } from '../../Events';\n\nexport default class ResultBlock extends Component {\n  constructor() {\n    super();\n    this.state = {\n\n    }\n  }\n\n  handleClick = () => {\n    this.props.onNext();\n    this.props.fetchScoreboard();\n    const data = {\n      pin: this.props.pin,\n      questionNumber: this.props.questionNumber + 1\n    }\n    socket.emit(FETCH_NEXT_QUESTION, data);\n    console.log('Host fetching next question.......');\n  }\n\n  render() {\n    const { answers, answeredA, answeredB, answeredC, answeredD, correct } = this.props;\n    if (correct === null) {\n      return <div>Results loading</div>\n    }\n    return (\n      <div>\n        <div>Correct: { correct }</div>\n        <div>{ answeredA } answered A</div>\n        <div>{ answeredB } answered B</div>\n        <div>{ answeredC } answered C</div>\n        <div>{ answeredD } answered D</div>\n        <div>{ answers.a }</div>\n        <div>{ answers.b }</div>\n        <div>{ answers.c }</div>\n        <div>{ answers.d }</div>\n        <Button variant=\"contained\" color=\"primary\" onClick={ this.handleClick }>\n          Next\n        </Button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nexport default class Scoreboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n\n    }\n  }\n\n  finishGame = () => {\n    this.props.endGame();\n  }\n\n  handleClick = () => {\n    this.props.nextQuestion();\n  }\n\n  render () {\n    if (this.props.rankedPlayers.length === 0) {\n      return <div>Loading scoreboard</div>\n    }\n\n    let button;\n    console.log('Game status is: ', this.props.gameStatus);\n    if (this.props.gameStatus) {\n      button = <Button variant=\"contained\" color=\"primary\" onClick={ this.handleClick }>Next</Button>\n    } else {\n      button = <Button variant=\"contained\" color=\"primary\" onClick={ this.finishGame }>End</Button>\n    }\n    return (\n      <div>\n        <h1>Scorboard</h1>\n        <Rankings playerRanks={ this.props.rankedPlayers } />\n        { button }\n      </div>\n    )\n  }\n}\n\nconst Rankings = (props) => {\n\n  const playerRankings = props.playerRanks.map((r, i) => (\n    <div key={ i }>\n      { r.rank } - { r.nickname } - { r.score }\n    </div>\n  ))\n\n  return (\n    <div>\n      { playerRankings }\n    </div>\n  )\n}\n","import React from 'react';\nimport { socket } from '../../Global/Header';\n\nfunction Gameover(props) {\n  return (\n    <div>\n      <FinalRankings rankings={ props.finalRankings } totalNumberOfQuestions={ props.totalNumberOfQuestions } />\n    </div>\n  )\n}\n\nconst FinalRankings = (props) => {\n\n  const playerRankings = props.rankings.map((r, i) => (\n    <div key={ i }>\n      { r.rank } - { r.nickname } - { r.score } pts.\n    </div>\n  ))\n\n  return (\n    <div>\n      { playerRankings }\n    </div>\n  )\n}\n\nexport default Gameover;\n","import React, { Component } from 'react';\nimport { socket } from '../../Global/Header';\nimport QuestionBlockIntro from '../QuestionBlockIntro/QuestionBlockIntro';\nimport QuestionBlock from '../QuestionBlock/QuestionBlock';\nimport ResultBlock from '../ResultBlock/ResultBlock';\nimport Scoreboard from '../Scoreboard/Scoreboard';\nimport Gameover from '../Gameover/Gameover';\nimport { FETCH_QUESTION, RECEIVE_QUESTION, QUESTION_RESULT, FETCH_SCOREBOARD, RECEIVE_SCOREBOARD, NEXT_QUESTION, GAME_OVER, FINISH_GAME, NEXT } from '../../Events';\n\nexport default class Gameblock extends Component {\n  constructor() {\n    super();\n    this.state = {\n      step: 1,\n      quizId: '',\n      pin: null,\n      questionNumber: 1,\n      totalNumberOfQuestions: null,\n      questionStatus: true,\n      question: null,\n      answers: [],\n      answeredA: 0,\n      answeredB: 0,\n      answeredC: 0,\n      answeredD: 0,\n      correct: null,\n      gameStatus: true,\n      rankedPlayers: []\n    };\n  }\n\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  }\n\n  nextQuestion = () => {\n    this.setState({\n      step: 1,\n      rankedPlayers: [],\n      answeredA: 0,\n      answeredB: 0,\n      answeredC: 0,\n      answeredD: 0,\n      correct: null\n    })\n    const { pin } = this.state;\n    socket.emit(NEXT, pin);\n  }\n\n  endGame = () => {\n    this.setState({\n      step: 5\n    })\n    const pin = this.state.pin;\n    socket.emit(FINISH_GAME, pin);\n  }\n\n  fetchScoreboard = () => {\n    const { quizId, pin } = this.state;\n    socket.emit(FETCH_SCOREBOARD, { quizId: quizId, pin: pin });\n    console.log('Host requesting for scoreboard.');\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const quizId = parsed.quizId;\n    const pin = parsed.pin;\n    console.log('Question for room with pin', pin);\n    this.setState({\n      pin: pin,\n      quizId: quizId\n    })\n\n    socket.emit(FETCH_QUESTION, pin);\n\n    socket.on(RECEIVE_QUESTION, data => {\n      const { questionNumber, question, totalNumberOfQuestions } = data;\n      console.log('Receiving question: ', data);\n      this.setState({\n        questioNumber: questionNumber,\n        question: question.question,\n        answers: question.answers,\n        correct: question.correct,\n        totalNumberOfQuestions: totalNumberOfQuestions\n      })\n    })\n\n    socket.on(QUESTION_RESULT, data => {\n      const { answeredA, answeredB, answeredC, answeredD, correctAnswer } = data;\n      const { step, quizId, pin, questionNumber } = this.state;\n      console.log(data);\n      this.setState({\n        answeredA: answeredA,\n        answeredB: answeredB,\n        answeredC: answeredC,\n        answeredD: answeredD,\n        correct: correctAnswer,\n        step: 3\n      });\n\n    });\n\n    socket.on(RECEIVE_SCOREBOARD, rankedPlayers => {\n      console.log('Receiving ranked players for scoreboard: ', rankedPlayers);\n      this.setState({\n        rankedPlayers: rankedPlayers\n      })\n    })\n\n    socket.on(NEXT_QUESTION, data => {\n      const { questionNumber, question, numberOfPlayers } = data;\n      console.log('Receiving next question: ', data);\n      this.setState({\n        questionNumber: questionNumber,\n        question: question.question,\n        answers: question.answers,\n        correct: question.correct,\n      })\n    });\n\n    socket.on(GAME_OVER, data => {\n      this.setState({\n        gameStatus: false,\n        rankedPlayers: data\n      })\n    })\n  }\n\n  render() {\n    const { step } = this.state;\n    const { pin, questionNumber, totalNumberOfQuestions, question, answers, answeredA, answeredB, answeredC, answeredD, correct, playersAnswered, rankedPlayers, gameStatus } = this.state;\n    console.log('Step: ', step);\n    switch(step) {\n      case 1:\n        return (\n          <QuestionBlockIntro\n            nextStep={ this.nextStep }\n            handleChange={ this.handleChange }\n            questionNumber={ questionNumber }\n            question={ question }\n            totalNumberOfQuestions={ totalNumberOfQuestions }\n          />\n        )\n      case 2:\n        return (\n          <QuestionBlock\n            nextStep={ this.nextStep }\n            pin={ pin }\n            question={ question }\n            answers={ answers }\n            playersAnswered={ playersAnswered }\n          />\n        )\n      case 3:\n        return (\n          <ResultBlock\n            answers={ answers }\n            answeredA={ answeredA }\n            answeredB={ answeredB }\n            answeredC={ answeredC }\n            answeredD={ answeredD }\n            correct={ correct }\n            pin={ pin }\n            questionNumber={ questionNumber }\n            onNext={  this.nextStep }\n            fetchScoreboard={ this.fetchScoreboard }\n          />\n        );\n      case 4:\n        return (\n          <Scoreboard\n            pin={ pin }\n            rankedPlayers={ rankedPlayers }\n            nextQuestion={ this.nextQuestion }\n            endGame={ this.endGame }\n            gameStatus={ gameStatus }\n          />\n        )\n      case 5:\n        return (\n          <Gameover\n            totalNumberOfQuestions={ totalNumberOfQuestions }\n            finalRankings={ rankedPlayers }\n          />\n        )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './JoinGame.scss';\nimport { MuiThemeProvider, createMuiTheme  } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { socket } from '../../Global/Header';\nimport { PLAYER_JOINED, GAME_NOT_FOUND, PLAYER_JOINED_SUCCESSFULLY } from '../../Events';\n\nconst darkGreyTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[900]\n    }\n  }\n})\n\nexport default class JoinGame extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nickname: null,\n      pin: null,\n      message: null,\n      disabled: false\n    };\n  }\n\n  handleChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleClick = event => {\n    this.setState({\n      disabled: true\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { nickname, pin } = this.state;\n    socket.emit(PLAYER_JOINED, {\n      nickname: nickname,\n      pin: pin\n    });\n\n    socket.on(GAME_NOT_FOUND, () => {\n      console.log('Game not found...');\n      this.setState({\n        message: 'Game not found.'\n      })\n\n      setTimeout(() => this.setState({\n        message: null\n      }), 2000);\n\n    });\n\n    socket.on(PLAYER_JOINED_SUCCESSFULLY, data => {\n      this.props.history.push(`/instructions?nickname=${ this.state.nickname }&pin=${ this.state.pin }`)\n    })\n  }\n\n  render() {\n    let error;\n    if (this.state.message === null) {\n      error = <div></div>\n    } else {\n      error = <div>We didn't recognise the game pin. Please check and try again.</div>\n    }\n    return (\n      <div className=\"home\">\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: '100vh' }}\n        >\n          <Grid item lg={2} md={3} xs={5}>\n            <h1 className=\"main-title\">QUIZY</h1>\n          </Grid>\n          <Grid item lg={2} md={3} xs={5}>\n            <form onSubmit={ this.handleSubmit }>\n              <TextField\n                inputProps={{\n                  style: {\n                    textAlign: \"center\",\n                    fontSize: \"1.6rem\",\n                    fontWeight: \"bold\",\n                    color: \"black\"\n                  }\n                }}\n                placeholder=\"NICKNAME\"\n                name=\"nickname\"\n                value={ this.state.nickname || '' }\n                onChange={ this.handleChange }\n                margin=\"dense\"\n                variant=\"outlined\"\n                required fullWidth\n              />\n              <TextField\n                inputProps={{\n                  style: {\n                    textAlign: \"center\",\n                    fontSize: \"1.6rem\",\n                    fontWeight: \"bold\",\n                    color: \"black\"\n                  }\n                }}\n                placeholder=\"GAME PIN\"\n                name=\"pin\"\n                value={ this.state.pin || '' }\n                onChange={ this.handleChange }\n                margin=\"dense\"\n                variant=\"outlined\"\n                required fullWidth\n              />\n              <MuiThemeProvider theme={ darkGreyTheme }>\n                <Button\n                  style={{\n                    fontSize: \"1.6rem\",\n                    textAlign: \"center\",\n                    fontWeight: \"bold\",\n                    margin: \"7px 0px\"\n                  }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  disabled={ this.state.disabled }\n                  fullWidth\n                >\n                  Enter\n                </Button>\n              </MuiThemeProvider>\n            </form>\n          </Grid>\n          <Grid item lg={2} md={3} xs={5}>\n            { error }\n          </Grid>\n          <Grid item lg={2} md={3} xs={5}>\n            <p style={{ color: \"white\" }}>Create your own quiz <Link to=\"/quizzes/new\" style={{ color: \"white\", textDecoration: \"none\", fontWeight: \"bold\" }}>here</Link>.</p>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class QuizDetailsForm extends Component {\n  continue = event => {\n    event.preventDefault();\n    this.props.nextStep();\n  }\n\n  render() {\n    const { values, handleChange } = this.props;\n    return (\n      <>\n        <Grid\n          container\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <Grid item md={4} sm={12}>\n            <Grid\n              container\n              spacing={2}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n              style={{ minHeight: '25vh' }}\n            >\n              <Grid item xs={12} style={{ textAlign: \"center\"}}>\n                <h1>Enter quiz details:</h1>\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Name\"\n                  name=\"name\"\n                  onChange={ handleChange }\n                  value={ values.name }\n                  margin=\"dense\"\n                  variant=\"filled\"\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Category\"\n                  name=\"category\"\n                  onChange={ handleChange }\n                  value={ values.category }\n                  margin=\"dense\"\n                  variant=\"filled\"\n                  fullWidth\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button variant=\"contained\" color=\"primary\" onClick={ this.continue }>\n                  Continue\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nexport default class QuestionsForm extends Component {\n  continue = event => {\n    event.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = event => {\n    event.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, saveQuestion } = this.props;\n    return (\n      <>\n        <Grid\n          container\n          spacing={2}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: '25vh' }}\n        >\n          <Grid item md={4} sm={12}>\n            <h1>Add Questions:</h1>\n          </Grid>\n          <Grid item md={4} sm={12}>\n            <QuestionForm\n              saveQuestion={ saveQuestion }\n            />\n          </Grid>\n          <Grid item md={4} sm={12}>\n            <Grid\n              container\n              spacing={2}\n            >\n              <Grid item md={6} xs={12}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={ this.back } fullWidth>\n                  Back\n                </Button>\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <Button variant=\"contained\" color=\"primary\" onClick={ this.continue } fullWidth>\n                  Continue\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item md={4} sm={12}>\n            <Grid\n              container\n              alignItems=\"flex-start\"\n              justify=\"center\"\n            >\n              <Questions questions={ values.questions }/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nconst Questions = (props) => {\n  if (props.questions.length === 0) {\n    return (<div>No questions have been added.</div>)\n  }\n\n  const quizQuestions = props.questions.map((q, i) => (\n    <div key={ i }>\n      <div style={{ fontWeight: \"bold\" }}>Question { i + 1 }</div>\n      <p>{ q.question } Answer: { q.answers[q.correct] }</p>\n    </div>\n  ))\n\n  return (\n    <div>\n      <h1>Current Questions:</h1>\n      { quizQuestions }\n    </div>\n  )\n}\n\nclass QuestionForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      question: '',\n      answers: {\n        a: '',\n        b: '',\n        c: '',\n        d: ''\n      },\n      correct: ''\n    };\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleAnswerChange = event => {\n    const { name, value } = event.target;\n    this.setState(prevState => ({\n      answers: {\n        ...prevState.answers,\n        [name]: value\n      }\n    }))\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.saveQuestion(this.state);\n    this.setState({\n      question: '',\n      answers: {\n        a: '',\n        b: '',\n        c: '',\n        d: ''\n      },\n      correct: ''\n    });\n  };\n\n  render() {\n    return (\n      <form variant=\"outlined\" onSubmit={ this.handleSubmit } >\n        <Grid\n          container\n          direction=\"row\"\n          spacing={1}\n        >\n          <Grid item xs={12}>\n            <TextField label=\"Question\" name='question' value={ this.state.question } onChange={ this.handleChange }  margin=\"dense\" variant=\"filled\" fullWidth/>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField label=\"Answer A:\" name='a' value={ this.state.answers.a } onChange={ this.handleAnswerChange } margin=\"dense\" variant=\"filled\" fullWidth required/>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField label=\"Answer B:\" name='b' value={ this.state.answers.b } onChange={ this.handleAnswerChange } margin=\"dense\" variant=\"filled\" fullWidth required/>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField label=\"Answer C:\" name='c' value={ this.state.answers.c } onChange={ this.handleAnswerChange } margin=\"dense\" variant=\"filled\" fullWidth required/>\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <TextField label=\"Answer D:\" name='d' value={ this.state.answers.d } onChange={ this.handleAnswerChange } margin=\"dense\" variant=\"filled\" fullWidth required/>\n          </Grid>\n          <Grid item xs={12}>\n            <FormControl margin=\"dense\" variant=\"filled\" style={{ width: '100%' }}>\n              <InputLabel>Correct Answer:</InputLabel>\n              <Select\n                name=\"correct\"\n                value={ this.state.correct } onChange={ this.handleChange }\n              >\n                <MenuItem value=\"a\">A</MenuItem>\n                <MenuItem value=\"b\">B</MenuItem>\n                <MenuItem value=\"c\">C</MenuItem>\n                <MenuItem value=\"d\">D</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12}>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\n              Add Question\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button  from '@material-ui/core/Button';\n\nexport default class Confirm extends Component {\n  continue = event => {\n    event.preventDefault();\n    this.props.saveQuiz();\n  };\n\n  back = event => {\n    event.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values: { name, category, questions} } = this.props;\n    return (\n      <>\n        <Grid\n          container\n          direction=\"column\"\n          spacing={2}\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <Grid item md={4} sm={12}>\n            <h1>Confirm details:</h1>\n          </Grid>\n          <Grid item md={4} sm={12}>\n            <Grid\n              container\n              alignItems=\"flex-start\"\n            >\n              <Grid item xs={12}>\n                <QuizDetails name={ name } category={ category } />\n                <QuestionList questions={ questions } />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item md={4} sm={12}>\n            <Grid\n              container\n              spacing={2}\n            >\n              <Grid item md={6} xs={12}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={ this.back } fullWidth>\n                  Back\n                </Button>\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <Button variant=\"contained\" color=\"primary\" onClick={ this.continue } fullWidth>\n                  Confirm\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n}\n\nconst QuizDetails = (props) => {\n  return (\n    <div>\n      <p><span style={{ fontWeight: \"bold\" }}>Name: </span>{ props.name }</p>\n      <p><span style={{ fontWeight: \"bold\" }}>Category: </span>{ props.category }</p>\n    </div>\n  )\n}\n\nconst QuestionList = (props) => {\n  const quizQuestions = props.questions.map((q,i) => (\n    <div key={ i }>\n      <div style={{ fontWeight: \"bold\" }}>Question { i + 1 }</div>\n      <p>{ q.question } Answer: { q.answers[q.correct] }</p>\n    </div>\n  ))\n\n  return (\n    <div>\n      { quizQuestions }\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport QuizDetailsForm from '../QuizDetailsForm/QuizDetailsForm';\nimport QuestionsForm from '../QuestionsForm/QuestionsForm';\nimport Confirm from '../Confirm/Confirm';\n\nlet URL = (model) => {\n  return `http://localhost:3000/${ model }/`\n};\n\nexport default class QuizForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      step: 1,\n      name: '',\n      category: '',\n      questions: []\n    };\n  }\n\n  // Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  }\n\n  // Go back to previous step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1\n    });\n  }\n\n  saveQuiz = async () => {\n    const { name, category, questions } = this.state;\n    const postRequest = {\n      name: name,\n      category: category,\n      questions: questions\n    }\n    console.log(postRequest);\n    let res = await axios.post(URL('quizzes'), postRequest);\n    const quizId = res.data._id;\n    console.log(quizId);\n    this.props.history.push(`/quizzes/${ quizId }`);\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  saveQuestion = content => {\n    this.setState({\n      questions: [...this.state.questions, content]\n    });\n  };\n\n  render() {\n    const { step } = this.state;\n    const { name, category, questions } = this.state;\n    const values = { name, category, questions };\n\n    switch(step) {\n      case 1:\n        return (\n          <QuizDetailsForm\n            nextStep={ this.nextStep }\n            handleChange={ this.handleChange }\n            values={ values }\n          />\n        )\n      case 2:\n        return (\n          <QuestionsForm\n            nextStep={ this.nextStep }\n            prevStep={ this.prevStep }\n            saveQuestion={ this.saveQuestion }\n            values={ values }\n          />\n        )\n      case 3:\n        return (\n          <Confirm\n            nextStep={ this.nextStep }\n            prevStep={ this.prevStep }\n            saveQuiz={ this.saveQuiz }\n            values={ values }\n          />\n        );\n      default:\n        return (\n          <QuizDetailsForm\n            nextStep={ this.nextStep }\n            handleChange={ this.handleChange }\n            values={ values }\n          />\n        )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport './Preview.scss';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class Preview extends Component {\n\n  componentDidMount() {\n    setTimeout(() => this.props.nextStep(), 5000);\n  }\n\n  render() {\n    const { pin, nickname, questionNumber, totalNumberOfQuestions } = this.props;\n    console.log('Hitting preview page');\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"space-between\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"15vh\" }}\n          className=\"top-info\"\n        >\n          <div>\n            <span>PIN: { pin }</span>\n            <span>{ questionNumber } of { totalNumberOfQuestions }</span>\n          </div>\n          <div>\n            { nickname }\n          </div>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"85vh\" }}\n          className=\"question-number\"\n        >\n          Question { questionNumber }\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './Answer.scss';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport GradeIcon from '@material-ui/icons/Grade';\nimport FiberManualRecordRoundedIcon from '@material-ui/icons/FiberManualRecordRounded';\nimport Brightness3SharpIcon from '@material-ui/icons/Brightness3Sharp';\n\nexport default class Answer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      answer: '',\n      buttonsOn: true\n    }\n  }\n\n  handleClick = (event) => {\n    console.log('Player has submitted answer:', event.currentTarget.value);\n    this.props.submitAnswer(event.currentTarget.value);\n    this.setState({\n      buttonsOn: false\n    })\n  }\n\n  render() {\n    if (!this.state.buttonsOn) {\n      return (<div>Answer submitted. Waiting for other players.</div>)\n    }\n\n    const { pin, nickname, questionNumber, totalNumberOfQuestions } = this.props;\n\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"space-between\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"15vh\" }}\n          className=\"answers-top-info\"\n        >\n          <div>\n            <span>PIN: { pin }</span>\n            <span>{ questionNumber } of { totalNumberOfQuestions }</span>\n          </div>\n          <div>\n            { nickname }\n          </div>\n        </Grid>\n        <Grid\n          item\n          container\n          spacing={1}\n          xs={12}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"85vh\" }}\n          className=\"answer-block\"\n        >\n          <Grid\n            item\n            xs={6}\n          >\n            <Button variant=\"contained\" style={{ backgroundColor: \"rgba(244, 67, 54, 1)\", minHeight: \"42vh\" }} value=\"a\" onClick={ this.handleClick } fullWidth>\n              <FavoriteIcon style={{ color: \"white\", fontSize: 50 }} />\n            </Button>\n          </Grid>\n          <Grid\n            item\n            xs={6}\n          >\n            <Button variant=\"contained\" style={{ backgroundColor: \"rgba(63, 81, 181, 1)\", minHeight: \"42vh\" }} value=\"b\" onClick={ this.handleClick } fullWidth>\n              <GradeIcon style={{ color: \"white\", fontSize: 50 }} />\n            </Button>\n          </Grid>\n          <Grid\n            item\n            xs={6}\n          >\n            <Button variant=\"contained\" style={{ backgroundColor: \"rgba(255, 152, 0, 1)\", minHeight: \"42vh\" }} value=\"c\" onClick={ this.handleClick } fullWidth>\n              <FiberManualRecordRoundedIcon style={{ color: \"white\", fontSize: 50 }} />\n            </Button>\n          </Grid>\n          <Grid\n            item\n            xs={6}\n          >\n            <Button variant=\"contained\" style={{ backgroundColor: \"rgba(76, 175, 80, 1)\", minHeight: \"42vh\" }} value=\"d\" onClick={ this.handleClick } fullWidth>\n              <Brightness3SharpIcon style={{ color: \"white\", fontSize: 50 }} />\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Results extends Component {\n\n  render () {\n    const correct = this.props.lastCorrect;\n    let showResult;\n\n    if (correct) {\n      showResult = <div>Correct</div>\n    } else {\n      showResult = <div>Incorrect</div>\n    }\n\n    const streak = this.props.streak;\n    let showStreak;\n\n    if (streak > 0) {\n      showStreak = <div>{`Your streak is ${ streak }`}</div>\n    } else {\n      showStreak = <></>\n    }\n\n    const rank = this.props.rank;\n    let showRank;\n\n    if (rank === 1) {\n      showRank = <div>You are in 1st place</div>\n    } else if (rank === 2) {\n      showRank = <div>You are in 2nd place</div>\n    } else if (rank === 3) {\n      showRank = <div>You are in 3rd place</div>\n    } else {\n      showRank = <div>{`You are in ${ rank }th place`}</div>\n    }\n\n    return (\n      <div>\n        <div>{ showResult }</div>\n        <div>{ showStreak }</div>\n        <div>{ showRank }</div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { socket } from '../../Global/Header';\n\nfunction Ranking(props) {\n  return (\n    <div>\n      <Rank rank={ props.rank } />\n      <div>Score: { props.score }</div>\n    </div>\n  )\n}\n\nconst Rank = (props) => {\n\n  let finalRank;\n\n  if (props.rank === 1) {\n    finalRank = <div>1st place</div>\n  } else if (props.rank === 2) {\n    finalRank = <div>2nd place</div>\n  } else if (props.rank === 3) {\n    finalRank = <div>3rd place</div>\n  } else {\n    finalRank=<div>{`${props.rank}th place`}</div>\n  }\n\n  return (\n    <div>\n      { finalRank }\n    </div>\n  )\n}\n\nexport default Ranking;\n","import React, { Component } from 'react';\nimport { socket } from '../../Global/Header';\nimport Preview from '../Preview/Preview';\nimport Answer from '../Answer/Answer';\nimport Result from '../Result/Result';\nimport Ranking from '../Ranking/Ranking';\nimport { FETCH_NUMBER_OF_QUESTIONS, RECEIVE_NUMBER_OF_QUESTIONS, RECEIVE_ANSWER_OPTIONS, ANSWER_SUBMITTED, ANSWER_RESULT, QUESTION_RESULT, FETCH_SCORE, PLAYER_RESULTS, RECEIVE_NEXT_ANSWER_OPTIONS, GAME_OVER, PLAYER_RANK, FINAL_RANK, FINAL, GO_TO_NEXT } from '../../Events';\n\nexport default class Gameblock extends Component {\n  constructor() {\n    super();\n    this.state = {\n      step: 1,\n      nickname: null,\n      pin: null,\n      answer: null,\n      score: 0,\n      streak: 0,\n      rank: 0,\n      lastCorrect: false,\n      totalCorrect: 0,\n      questionNumber: 1,\n      totalNumberOfQuestions: null,\n      answers: []\n    };\n  }\n\n  // Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  }\n\n  submitAnswer = (letter) => {\n    console.log('Answer submitted:', letter)\n    this.setState({\n      answer: letter\n    })\n\n    const data = {\n      answer: letter,\n      pin: this.state.pin\n    }\n\n    socket.emit(ANSWER_SUBMITTED, data);\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const nickname = parsed.nickname;\n    const pin = parsed.pin;\n    console.log('Player joined room with pin:', pin);\n    this.setState({\n      nickname: nickname,\n      pin: pin\n    })\n\n    socket.emit(FETCH_NUMBER_OF_QUESTIONS, pin)\n\n\n    socket.on(RECEIVE_NUMBER_OF_QUESTIONS, count => {\n      this.setState({\n        totalNumberOfQuestions: parseInt(count)\n      })\n    })\n\n    socket.on(RECEIVE_ANSWER_OPTIONS, data => {\n      this.setState({\n        questionNumber: data.questionNumber,\n        // totalNumberOfQuestions: data.totalNumberOfQuestions,\n        answers: data.answers\n      })\n    })\n\n    socket.on(ANSWER_RESULT, result => {\n      this.setState({\n        lastCorrect: true\n      })\n    })\n\n    socket.on(QUESTION_RESULT, data => {\n      const { nickname, pin } = this.state;\n      const info = {\n        nickname: nickname,\n        pin: pin\n      }\n\n      socket.emit(FETCH_SCORE, info);\n    })\n\n    socket.on(PLAYER_RESULTS, data => {\n      const { step } = this.state;\n      const { score, rank, streak, lastCorrect } = data;\n      this.setState({\n        score: score,\n        streak: streak,\n        rank: rank,\n        lastCorrect: lastCorrect,\n        step: step + 1\n      })\n    });\n\n    socket.on(RECEIVE_NEXT_ANSWER_OPTIONS, data => {\n      const { step } = this.state;\n      const { questionNumber, totalNumberOfQuestions, answers } = data;\n      this.setState({\n        questionNumber: questionNumber,\n        totalNumberOfQuestions: totalNumberOfQuestions,\n        answers: answers\n      })\n    })\n\n    socket.on(GO_TO_NEXT, () => {\n      this.setState({\n        step: 1\n      })\n    })\n\n    socket.on(GAME_OVER, () => {\n      const pin = this.state.pin;\n      socket.emit(PLAYER_RANK, pin);\n    })\n\n    socket.on(FINAL_RANK, data => {\n      const { score, totalCorrect, rank } = data;\n      this.setState({\n        score: score,\n        totalCorrect: totalCorrect,\n        rank: rank\n      })\n    })\n\n    socket.on(FINAL, () => {\n      const { step } = this.state;\n      this.setState({\n        step: 4\n      })\n    })\n  }\n\n  render() {\n    const { step } = this.state;\n    const { pin, nickname, answer, score, streak, lastCorrect, questionNumber, totalNumberOfQuestions, answers, rank } = this.state;\n    console.log('Current step:', step);\n    switch(step) {\n      case 1:\n        return (\n          <Preview\n            nextStep={ this.nextStep }\n            pin={ pin }\n            nickname={ nickname }\n            questionNumber={ questionNumber }\n            totalNumberOfQuestions={ totalNumberOfQuestions }\n          />\n        )\n\n      case 2:\n        return (\n          <Answer\n            submitAnswer={ this.submitAnswer }\n            pin={ pin }\n            nickname={ nickname }\n            questionNumber={ questionNumber }\n            totalNumberOfQuestions={ totalNumberOfQuestions }\n            answers={ answers }\n          />\n        )\n      case 3:\n        return (\n          <Result\n            lastCorrect={ lastCorrect }\n            streak={ streak }\n            rank={ rank }\n            score={ score }\n          />\n        );\n      case 4:\n        return (\n          <Ranking\n            rank={ rank }\n            score={ score }\n          />\n        )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { socket } from '../../Global/Header';\nimport './Instructions.scss';\nimport Grid from '@material-ui/core/Grid';\nimport { GAME_HAS_STARTED } from '../../Events';\n\nexport default class Instructions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nickname: null,\n      pin: null\n    };\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const nickname = parsed.nickname;\n    const pin = parsed.pin;\n    console.log('Instruction page for player in room:', pin);\n    this.setState({\n      nickname: nickname,\n      pin: pin\n    })\n\n    socket.on(GAME_HAS_STARTED, () => {\n      this.props.history.push(`/getready?nickname=${ this.state.nickname }&pin=${ this.state.pin }`);\n   })\n  }\n\n  render() {\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"space-between\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"15vh\" }}\n          className=\"info\"\n        >\n          <div>PIN: { this.state.pin }</div>\n          <div>{ this.state.nickname }</div>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          spacing={4}\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{ minHeight: \"85vh\" }}\n          className=\"main-info\"\n        >\n          <Grid\n            item\n            xs={12}\n            className=\"in\"\n          >\n            You're in\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            className=\"name\"\n          >\n            See your nickname on screen?\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './GetReady.scss';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class GetReady extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nickname: null,\n      pin: null\n    };\n  }\n\n  componentDidMount() {\n    const queryString = require('query-string');\n    const parsed = queryString.parse(this.props.location.search);\n    const nickname = parsed.nickname;\n    const pin = parsed.pin;\n    console.log('Get ready page for player in room:', pin);\n    this.setState({\n      nickname: nickname,\n      pin: pin\n    })\n\n    setTimeout(() => {\n      this.props.history.push(`/playblock?nickname=${ this.state.nickname }&pin=${ this.state.pin }`)\n    }, 5000);\n  }\n\n  render() {\n    return(\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: '100vh' }}\n      >\n        <Grid\n          item\n          container\n          justify=\"space-between\"\n          alignItems=\"center\"\n          xs={12}\n          style={{ minHeight: \"15vh\" }}\n          className=\"info\"\n        >\n          <div>PIN: { this.state.pin }</div>\n          <div>{ this.state.nickname }</div>\n        </Grid>\n        <Grid\n          item\n          container\n          xs={12}\n          alignItems=\"center\"\n          justify=\"center\"\n          style={{ minHeight: \"85vh\" }}\n          className=\"ready-block\"\n        >\n          Get ready\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React from 'react';\nimport Quiz from './Quiz/Quiz';\nimport Lobby from './Host/Lobby/Lobby';\nimport Start from './Host/Start/Start';\nimport Gameblock from './Host/Gameblock/Gameblock';\nimport JoinGame from './Player/JoinGame/JoinGame';\nimport QuizForm from './Quiz/NewQuiz/QuizForm/QuizForm';\nimport Playblock from './Player/Playblock/Playblock';\nimport Instructions from './Player/Instructions/Instructions';\nimport GetReady from './Player/GetReady/GetReady';\nimport { Header } from './Global/Header';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <HashRouter>\n        <Switch>\n          <Route exact path='/' component={ JoinGame }/>\n          <Route exact path='/instructions' component={ Instructions }/>\n          <Route exact path='/getready' component={ GetReady }/>\n          <Route exact path='/lobby' component={ Lobby }/>\n          <Route exact path='/start' component={ Start }/>\n          <Route exact path='/gameblock' component={ Gameblock }/>\n          <Route exact path='/playblock' component={ Playblock }/>\n          <Route exact path='/quizzes/new' component={ QuizForm }/>\n          <Route path='/quizzes/:quizId' component={ Quiz }/>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  GAME_INTRO:\"GAME_INTRO\",\n  FETCH_NUMBER_OF_QUESTIONS:\"FETCH_NUMBER_OF_QUESTIONS\",\n  RECEIVE_NUMBER_OF_QUESTIONS:\"RECEIVE_NUMBER_OF_QUESTIONS\",\n  FETCH_INTRO:\"FETCH_INTRO\",\n  HOST_JOINED:\"HOST_JOINED\",\n  HOST_STARTED_GAME:\"HOST_STARTED_GAME\",\n  SHOW_PIN:\"SHOW_PIN\",\n  UPDATE_PLAYERS_IN_LOBBY:\"UPDATE_PLAYERS_IN_LOBBY\",\n  PLAYER_JOINED:\"PLAYER_JOINED\",\n  PLAYER_JOINED_SUCCESSFULLY:\"PLAYER_JOINED_SUCCESSFULLY\",\n  WAITING_FOR_START:\"WAITING_FOR_START\",\n  GAME_NOT_FOUND:\"GAME_NOT_FOUND\",\n  GAME_HAS_STARTED:\"GAME_HAS_STARTED\",\n  READY:\"READY\",\n  FETCH_QUESTION:\"FETCH_QUESTION\",\n  RECEIVE_QUESTION:\"RECEIVE_QUESTION\",\n  RECEIVE_ANSWER_OPTIONS:\"RECEIVE_ANSWER_OPTIONS\",\n  ANSWER_SUBMITTED:\"ANSWER_SUBMITTED\",\n  UPDATE_PLAYERS_ANSWERED:\"UPDATE_PLAYERS_ANSWERED\",\n  ANSWER_RESULT:\"ANSWER_RESULT\",\n  QUESTION_RESULT:\"QUESTION_RESULT\",\n  QUESTION_END:\"QUESTION_END\",\n  FETCH_TIME:\"FETCH_TIME\",\n  TIME:\"TIME\",\n  FETCH_SCOREBOARD:\"FETCH_SCOREBOARD\",\n  RECEIVE_SCOREBOARD:\"RECEIVE_SCOREBOARD\",\n  FETCH_SCORE:\"FETCH_SCORE\",\n  PLAYER_RESULTS:\"PLAYER_RESULTS\",\n  FETCH_NEXT_QUESTION:\"FETCH_NEXT_QUESTION\",\n  NEXT_QUESTION:\"NEXT_QUESTION\",\n  NEXT:\"NEXT\",\n  GO_TO_NEXT:\"GO_TO_NEXT\",\n  RECEIVE_NEXT_ANSWER_OPTIONS:\"RECEIVE_NEXT_ANSWER_OPTIONS\",\n  GAME_OVER:\"GAME_OVER\",\n  FINISH_GAME:\"FINISH_GAME\",\n  PLAYER_RANK:\"PLAYER_RANK\",\n  FINAL_RANK:\"FINAL_RANK\",\n  FINAL:\"FINAL\"\n}\n"],"sourceRoot":""}